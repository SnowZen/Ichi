{
  "version": 3,
  "sources": ["../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../node_modules/unenv/dist/runtime/node/console.mjs", "../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../node_modules/unenv/dist/runtime/node/tty.mjs", "../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../node_modules/unenv/dist/runtime/node/internal/fs/promises.mjs", "../../node_modules/unenv/dist/runtime/node/internal/fs/constants.mjs", "../../node_modules/unenv/dist/runtime/node/fs/promises.mjs", "../../node_modules/unenv/dist/runtime/node/internal/fs/classes.mjs", "../../node_modules/unenv/dist/runtime/node/internal/fs/fs.mjs", "../../node_modules/unenv/dist/runtime/node/fs.mjs", "../pages-HXhiih/functionsWorker-0.19196264265403884.mjs/node-built-in-modules:fs", "../pages-HXhiih/functionsWorker-0.19196264265403884.mjs/node-built-in-modules:path", "../../node_modules/unenv/dist/runtime/node/internal/os/constants.mjs", "../../node_modules/unenv/dist/runtime/node/os.mjs", "../pages-HXhiih/functionsWorker-0.19196264265403884.mjs/node-built-in-modules:os", "../../node_modules/unenv/dist/runtime/node/internal/crypto/web.mjs", "../../node_modules/unenv/dist/runtime/node/internal/crypto/node.mjs", "../../node_modules/unenv/dist/runtime/node/crypto.mjs", "../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/crypto.mjs", "../pages-HXhiih/functionsWorker-0.19196264265403884.mjs/node-built-in-modules:crypto", "../../node_modules/dotenv/package.json", "../../node_modules/dotenv/lib/main.js", "../../node_modules/dotenv/lib/env-options.js", "../../node_modules/dotenv/lib/cli-options.js", "../../node_modules/dotenv/config.js", "../../node_modules/hono/dist/compose.js", "../../node_modules/hono/dist/request/constants.js", "../../node_modules/hono/dist/utils/body.js", "../../node_modules/hono/dist/utils/url.js", "../../node_modules/hono/dist/request.js", "../../node_modules/hono/dist/utils/html.js", "../../node_modules/hono/dist/context.js", "../../node_modules/hono/dist/router.js", "../../node_modules/hono/dist/utils/constants.js", "../../node_modules/hono/dist/hono-base.js", "../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../node_modules/hono/dist/router/reg-exp-router/index.js", "../../node_modules/hono/dist/router/smart-router/router.js", "../../node_modules/hono/dist/router/smart-router/index.js", "../../node_modules/hono/dist/router/trie-router/node.js", "../../node_modules/hono/dist/router/trie-router/router.js", "../../node_modules/hono/dist/router/trie-router/index.js", "../../node_modules/hono/dist/hono.js", "../../node_modules/hono/dist/index.js", "../../node_modules/hono/dist/middleware/cors/index.js", "../../server/routes/demo.ts", "../../server/routes/rooms.ts", "../../server/index.ts", "../../functions/api/%255B%255Bpath%255D%255D.ts", "../pages-HXhiih/functionsWorker-0.19196264265403884.mjs/functionsRoutes-0.3892339710110191.mjs", "../pages-HXhiih/bundle-tgqQWs/middleware-loader.entry.ts", "../pages-HXhiih/bundle-tgqQWs/middleware-insertion-facade.js", "../../node_modules/wrangler/templates/pages-template-worker.ts", "../../node_modules/path-to-regexp/src/index.ts", "../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../node_modules/wrangler/templates/middleware/common.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-P8oKpq/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-P8oKpq/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\yoshiki.magnolon\\Documents\\Travail BTS\\Informatique\\JS\\Ichi\\.wrangler\\tmp\\dev-OoVt0o",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\nexport * from \"./internal/perf_hooks/performance.mjs\";\n// prettier-ignore\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\n// prettier-ignore\nexport const constants = {\n\tNODE_PERFORMANCE_GC_MAJOR,\n\tNODE_PERFORMANCE_GC_MINOR,\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\n\tNODE_PERFORMANCE_GC_WEAKCB,\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\n};\nexport const monitorEventLoopDelay = function(_options) {\n\treturn new IntervalHistogram();\n};\nexport const createHistogram = function(_options) {\n\treturn new RecordableHistogram();\n};\nexport default {\n\tPerformance,\n\tPerformanceMark,\n\tPerformanceEntry,\n\tPerformanceMeasure,\n\tPerformanceObserverEntryList,\n\tPerformanceObserver,\n\tPerformanceResourceTiming,\n\tperformance,\n\tconstants,\n\tcreateHistogram,\n\tmonitorEventLoopDelay\n};\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "import { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport const isatty = function() {\n\treturn false;\n};\nexport default {\n\tReadStream: WriteStream,\n\tWriteStream,\n\tisatty\n};\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "import { notImplemented } from \"../../../_internal/utils.mjs\";\nexport const access = /* @__PURE__ */ notImplemented(\"fs.access\");\nexport const copyFile = /* @__PURE__ */ notImplemented(\"fs.copyFile\");\nexport const cp = /* @__PURE__ */ notImplemented(\"fs.cp\");\nexport const open = /* @__PURE__ */ notImplemented(\"fs.open\");\nexport const opendir = /* @__PURE__ */ notImplemented(\"fs.opendir\");\nexport const rename = /* @__PURE__ */ notImplemented(\"fs.rename\");\nexport const truncate = /* @__PURE__ */ notImplemented(\"fs.truncate\");\nexport const rm = /* @__PURE__ */ notImplemented(\"fs.rm\");\nexport const rmdir = /* @__PURE__ */ notImplemented(\"fs.rmdir\");\nexport const mkdir = /* @__PURE__ */ notImplemented(\"fs.mkdir\");\nexport const readdir = /* @__PURE__ */ notImplemented(\"fs.readdir\");\nexport const readlink = /* @__PURE__ */ notImplemented(\"fs.readlink\");\nexport const symlink = /* @__PURE__ */ notImplemented(\"fs.symlink\");\nexport const lstat = /* @__PURE__ */ notImplemented(\"fs.lstat\");\nexport const stat = /* @__PURE__ */ notImplemented(\"fs.stat\");\nexport const link = /* @__PURE__ */ notImplemented(\"fs.link\");\nexport const unlink = /* @__PURE__ */ notImplemented(\"fs.unlink\");\nexport const chmod = /* @__PURE__ */ notImplemented(\"fs.chmod\");\nexport const lchmod = /* @__PURE__ */ notImplemented(\"fs.lchmod\");\nexport const lchown = /* @__PURE__ */ notImplemented(\"fs.lchown\");\nexport const chown = /* @__PURE__ */ notImplemented(\"fs.chown\");\nexport const utimes = /* @__PURE__ */ notImplemented(\"fs.utimes\");\nexport const lutimes = /* @__PURE__ */ notImplemented(\"fs.lutimes\");\nexport const realpath = /* @__PURE__ */ notImplemented(\"fs.realpath\");\nexport const mkdtemp = /* @__PURE__ */ notImplemented(\"fs.mkdtemp\");\nexport const writeFile = /* @__PURE__ */ notImplemented(\"fs.writeFile\");\nexport const appendFile = /* @__PURE__ */ notImplemented(\"fs.appendFile\");\nexport const readFile = /* @__PURE__ */ notImplemented(\"fs.readFile\");\nexport const watch = /* @__PURE__ */ notImplemented(\"fs.watch\");\nexport const statfs = /* @__PURE__ */ notImplemented(\"fs.statfs\");\nexport const glob = /* @__PURE__ */ notImplemented(\"fs.glob\");\n", "// npx -y node@22.14 -e 'const{constants}=require(\"fs\");console.log(Object.entries(constants).map(([k,v]) => `export const ${k} = ${JSON.stringify(v)}`).join(\"\\n\"))'\nexport const UV_FS_SYMLINK_DIR = 1;\nexport const UV_FS_SYMLINK_JUNCTION = 2;\nexport const O_RDONLY = 0;\nexport const O_WRONLY = 1;\nexport const O_RDWR = 2;\nexport const UV_DIRENT_UNKNOWN = 0;\nexport const UV_DIRENT_FILE = 1;\nexport const UV_DIRENT_DIR = 2;\nexport const UV_DIRENT_LINK = 3;\nexport const UV_DIRENT_FIFO = 4;\nexport const UV_DIRENT_SOCKET = 5;\nexport const UV_DIRENT_CHAR = 6;\nexport const UV_DIRENT_BLOCK = 7;\nexport const EXTENSIONLESS_FORMAT_JAVASCRIPT = 0;\nexport const EXTENSIONLESS_FORMAT_WASM = 1;\nexport const S_IFMT = 61440;\nexport const S_IFREG = 32768;\nexport const S_IFDIR = 16384;\nexport const S_IFCHR = 8192;\nexport const S_IFBLK = 24576;\nexport const S_IFIFO = 4096;\nexport const S_IFLNK = 40960;\nexport const S_IFSOCK = 49152;\nexport const O_CREAT = 64;\nexport const O_EXCL = 128;\nexport const UV_FS_O_FILEMAP = 0;\nexport const O_NOCTTY = 256;\nexport const O_TRUNC = 512;\nexport const O_APPEND = 1024;\nexport const O_DIRECTORY = 65536;\nexport const O_NOATIME = 262144;\nexport const O_NOFOLLOW = 131072;\nexport const O_SYNC = 1052672;\nexport const O_DSYNC = 4096;\nexport const O_DIRECT = 16384;\nexport const O_NONBLOCK = 2048;\nexport const S_IRWXU = 448;\nexport const S_IRUSR = 256;\nexport const S_IWUSR = 128;\nexport const S_IXUSR = 64;\nexport const S_IRWXG = 56;\nexport const S_IRGRP = 32;\nexport const S_IWGRP = 16;\nexport const S_IXGRP = 8;\nexport const S_IRWXO = 7;\nexport const S_IROTH = 4;\nexport const S_IWOTH = 2;\nexport const S_IXOTH = 1;\nexport const F_OK = 0;\nexport const R_OK = 4;\nexport const W_OK = 2;\nexport const X_OK = 1;\nexport const UV_FS_COPYFILE_EXCL = 1;\nexport const COPYFILE_EXCL = 1;\nexport const UV_FS_COPYFILE_FICLONE = 2;\nexport const COPYFILE_FICLONE = 2;\nexport const UV_FS_COPYFILE_FICLONE_FORCE = 4;\nexport const COPYFILE_FICLONE_FORCE = 4;\n", "import { access, appendFile, chmod, chown, copyFile, cp, glob, lchmod, lchown, link, lstat, lutimes, mkdir, mkdtemp, open, opendir, readFile, readdir, readlink, realpath, rename, rm, rmdir, stat, statfs, symlink, truncate, unlink, utimes, watch, writeFile } from \"../internal/fs/promises.mjs\";\nimport * as constants from \"../internal/fs/constants.mjs\";\nexport { constants };\nexport * from \"../internal/fs/promises.mjs\";\nexport default {\n\tconstants,\n\taccess,\n\tappendFile,\n\tchmod,\n\tchown,\n\tcopyFile,\n\tcp,\n\tglob,\n\tlchmod,\n\tlchown,\n\tlink,\n\tlstat,\n\tlutimes,\n\tmkdir,\n\tmkdtemp,\n\topen,\n\topendir,\n\treadFile,\n\treaddir,\n\treadlink,\n\trealpath,\n\trename,\n\trm,\n\trmdir,\n\tstat,\n\tstatfs,\n\tsymlink,\n\ttruncate,\n\tunlink,\n\tutimes,\n\twatch,\n\twriteFile\n};\n", "import { notImplementedClass } from \"../../../_internal/utils.mjs\";\nexport const Dir = /* @__PURE__ */ notImplementedClass(\"fs.Dir\");\nexport const Dirent = /* @__PURE__ */ notImplementedClass(\"fs.Dirent\");\nexport const Stats = /* @__PURE__ */ notImplementedClass(\"fs.Stats\");\nexport const ReadStream = /* @__PURE__ */ notImplementedClass(\"fs.ReadStream\");\nexport const WriteStream = /* @__PURE__ */ notImplementedClass(\"fs.WriteStream\");\nexport const FileReadStream = ReadStream;\nexport const FileWriteStream = WriteStream;\n", "import { notImplemented, notImplementedAsync } from \"../../../_internal/utils.mjs\";\nimport * as fsp from \"./promises.mjs\";\nfunction callbackify(fn) {\n\tconst fnc = function(...args) {\n\t\tconst cb = args.pop();\n\t\tfn().catch((error) => cb(error)).then((val) => cb(undefined, val));\n\t};\n\tfnc.__promisify__ = fn;\n\tfnc.native = fnc;\n\treturn fnc;\n}\n// Async\nexport const access = callbackify(fsp.access);\nexport const appendFile = callbackify(fsp.appendFile);\nexport const chown = callbackify(fsp.chown);\nexport const chmod = callbackify(fsp.chmod);\nexport const copyFile = callbackify(fsp.copyFile);\nexport const cp = callbackify(fsp.cp);\nexport const lchown = callbackify(fsp.lchown);\nexport const lchmod = callbackify(fsp.lchmod);\nexport const link = callbackify(fsp.link);\nexport const lstat = callbackify(fsp.lstat);\nexport const lutimes = callbackify(fsp.lutimes);\nexport const mkdir = callbackify(fsp.mkdir);\nexport const mkdtemp = callbackify(fsp.mkdtemp);\nexport const realpath = callbackify(fsp.realpath);\nexport const open = callbackify(fsp.open);\nexport const opendir = callbackify(fsp.opendir);\nexport const readdir = callbackify(fsp.readdir);\nexport const readFile = callbackify(fsp.readFile);\nexport const readlink = callbackify(fsp.readlink);\nexport const rename = callbackify(fsp.rename);\nexport const rm = callbackify(fsp.rm);\nexport const rmdir = callbackify(fsp.rmdir);\nexport const stat = callbackify(fsp.stat);\nexport const symlink = callbackify(fsp.symlink);\nexport const truncate = callbackify(fsp.truncate);\nexport const unlink = callbackify(fsp.unlink);\nexport const utimes = callbackify(fsp.utimes);\nexport const writeFile = callbackify(fsp.writeFile);\nexport const statfs = callbackify(fsp.statfs);\nexport const close = /* @__PURE__ */ notImplementedAsync(\"fs.close\");\nexport const createReadStream = /* @__PURE__ */ notImplementedAsync(\"fs.createReadStream\");\nexport const createWriteStream = /* @__PURE__ */ notImplementedAsync(\"fs.createWriteStream\");\nexport const exists = /* @__PURE__ */ notImplementedAsync(\"fs.exists\");\nexport const fchown = /* @__PURE__ */ notImplementedAsync(\"fs.fchown\");\nexport const fchmod = /* @__PURE__ */ notImplementedAsync(\"fs.fchmod\");\nexport const fdatasync = /* @__PURE__ */ notImplementedAsync(\"fs.fdatasync\");\nexport const fstat = /* @__PURE__ */ notImplementedAsync(\"fs.fstat\");\nexport const fsync = /* @__PURE__ */ notImplementedAsync(\"fs.fsync\");\nexport const ftruncate = /* @__PURE__ */ notImplementedAsync(\"fs.ftruncate\");\nexport const futimes = /* @__PURE__ */ notImplementedAsync(\"fs.futimes\");\nexport const lstatSync = /* @__PURE__ */ notImplementedAsync(\"fs.lstatSync\");\nexport const read = /* @__PURE__ */ notImplementedAsync(\"fs.read\");\nexport const readv = /* @__PURE__ */ notImplementedAsync(\"fs.readv\");\nexport const realpathSync = /* @__PURE__ */ notImplementedAsync(\"fs.realpathSync\");\nexport const statSync = /* @__PURE__ */ notImplementedAsync(\"fs.statSync\");\nexport const unwatchFile = /* @__PURE__ */ notImplementedAsync(\"fs.unwatchFile\");\nexport const watch = /* @__PURE__ */ notImplementedAsync(\"fs.watch\");\nexport const watchFile = /* @__PURE__ */ notImplementedAsync(\"fs.watchFile\");\nexport const write = /* @__PURE__ */ notImplementedAsync(\"fs.write\");\nexport const writev = /* @__PURE__ */ notImplementedAsync(\"fs.writev\");\nexport const _toUnixTimestamp = /* @__PURE__ */ notImplementedAsync(\"fs._toUnixTimestamp\");\nexport const openAsBlob = /* @__PURE__ */ notImplementedAsync(\"fs.openAsBlob\");\nexport const glob = /* @__PURE__ */ notImplementedAsync(\"fs.glob\");\n// Sync\nexport const appendFileSync = /* @__PURE__ */ notImplemented(\"fs.appendFileSync\");\nexport const accessSync = /* @__PURE__ */ notImplemented(\"fs.accessSync\");\nexport const chownSync = /* @__PURE__ */ notImplemented(\"fs.chownSync\");\nexport const chmodSync = /* @__PURE__ */ notImplemented(\"fs.chmodSync\");\nexport const closeSync = /* @__PURE__ */ notImplemented(\"fs.closeSync\");\nexport const copyFileSync = /* @__PURE__ */ notImplemented(\"fs.copyFileSync\");\nexport const cpSync = /* @__PURE__ */ notImplemented(\"fs.cpSync\");\nexport const existsSync = () => false;\nexport const fchownSync = /* @__PURE__ */ notImplemented(\"fs.fchownSync\");\nexport const fchmodSync = /* @__PURE__ */ notImplemented(\"fs.fchmodSync\");\nexport const fdatasyncSync = /* @__PURE__ */ notImplemented(\"fs.fdatasyncSync\");\nexport const fstatSync = /* @__PURE__ */ notImplemented(\"fs.fstatSync\");\nexport const fsyncSync = /* @__PURE__ */ notImplemented(\"fs.fsyncSync\");\nexport const ftruncateSync = /* @__PURE__ */ notImplemented(\"fs.ftruncateSync\");\nexport const futimesSync = /* @__PURE__ */ notImplemented(\"fs.futimesSync\");\nexport const lchownSync = /* @__PURE__ */ notImplemented(\"fs.lchownSync\");\nexport const lchmodSync = /* @__PURE__ */ notImplemented(\"fs.lchmodSync\");\nexport const linkSync = /* @__PURE__ */ notImplemented(\"fs.linkSync\");\nexport const lutimesSync = /* @__PURE__ */ notImplemented(\"fs.lutimesSync\");\nexport const mkdirSync = /* @__PURE__ */ notImplemented(\"fs.mkdirSync\");\nexport const mkdtempSync = /* @__PURE__ */ notImplemented(\"fs.mkdtempSync\");\nexport const openSync = /* @__PURE__ */ notImplemented(\"fs.openSync\");\nexport const opendirSync = /* @__PURE__ */ notImplemented(\"fs.opendirSync\");\nexport const readdirSync = /* @__PURE__ */ notImplemented(\"fs.readdirSync\");\nexport const readSync = /* @__PURE__ */ notImplemented(\"fs.readSync\");\nexport const readvSync = /* @__PURE__ */ notImplemented(\"fs.readvSync\");\nexport const readFileSync = /* @__PURE__ */ notImplemented(\"fs.readFileSync\");\nexport const readlinkSync = /* @__PURE__ */ notImplemented(\"fs.readlinkSync\");\nexport const renameSync = /* @__PURE__ */ notImplemented(\"fs.renameSync\");\nexport const rmSync = /* @__PURE__ */ notImplemented(\"fs.rmSync\");\nexport const rmdirSync = /* @__PURE__ */ notImplemented(\"fs.rmdirSync\");\nexport const symlinkSync = /* @__PURE__ */ notImplemented(\"fs.symlinkSync\");\nexport const truncateSync = /* @__PURE__ */ notImplemented(\"fs.truncateSync\");\nexport const unlinkSync = /* @__PURE__ */ notImplemented(\"fs.unlinkSync\");\nexport const utimesSync = /* @__PURE__ */ notImplemented(\"fs.utimesSync\");\nexport const writeFileSync = /* @__PURE__ */ notImplemented(\"fs.writeFileSync\");\nexport const writeSync = /* @__PURE__ */ notImplemented(\"fs.writeSync\");\nexport const writevSync = /* @__PURE__ */ notImplemented(\"fs.writevSync\");\nexport const statfsSync = /* @__PURE__ */ notImplemented(\"fs.statfsSync\");\nexport const globSync = /* @__PURE__ */ notImplemented(\"fs.globSync\");\n", "import promises from \"node:fs/promises\";\nimport { Dir, Dirent, FileReadStream, FileWriteStream, ReadStream, Stats, WriteStream } from \"./internal/fs/classes.mjs\";\nimport { _toUnixTimestamp, access, accessSync, appendFile, appendFileSync, chmod, chmodSync, chown, chownSync, close, closeSync, copyFile, copyFileSync, cp, cpSync, createReadStream, createWriteStream, exists, existsSync, fchmod, fchmodSync, fchown, fchownSync, fdatasync, fdatasyncSync, fstat, fstatSync, fsync, fsyncSync, ftruncate, ftruncateSync, futimes, futimesSync, glob, lchmod, globSync, lchmodSync, lchown, lchownSync, link, linkSync, lstat, lstatSync, lutimes, lutimesSync, mkdir, mkdirSync, mkdtemp, mkdtempSync, open, openAsBlob, openSync, opendir, opendirSync, read, readFile, readFileSync, readSync, readdir, readdirSync, readlink, readlinkSync, readv, readvSync, realpath, realpathSync, rename, renameSync, rm, rmSync, rmdir, rmdirSync, stat, statSync, statfs, statfsSync, symlink, symlinkSync, truncate, truncateSync, unlink, unlinkSync, unwatchFile, utimes, utimesSync, watch, watchFile, write, writeFile, writeFileSync, writeSync, writev, writevSync } from \"./internal/fs/fs.mjs\";\nimport * as constants from \"./internal/fs/constants.mjs\";\nimport { F_OK, R_OK, W_OK, X_OK } from \"./internal/fs/constants.mjs\";\nexport { F_OK, R_OK, W_OK, X_OK } from \"./internal/fs/constants.mjs\";\nexport { promises, constants };\nexport * from \"./internal/fs/fs.mjs\";\nexport * from \"./internal/fs/classes.mjs\";\nexport default {\n\tF_OK,\n\tR_OK,\n\tW_OK,\n\tX_OK,\n\tconstants,\n\tpromises,\n\tDir,\n\tDirent,\n\tFileReadStream,\n\tFileWriteStream,\n\tReadStream,\n\tStats,\n\tWriteStream,\n\t_toUnixTimestamp,\n\taccess,\n\taccessSync,\n\tappendFile,\n\tappendFileSync,\n\tchmod,\n\tchmodSync,\n\tchown,\n\tchownSync,\n\tclose,\n\tcloseSync,\n\tcopyFile,\n\tcopyFileSync,\n\tcp,\n\tcpSync,\n\tcreateReadStream,\n\tcreateWriteStream,\n\texists,\n\texistsSync,\n\tfchmod,\n\tfchmodSync,\n\tfchown,\n\tfchownSync,\n\tfdatasync,\n\tfdatasyncSync,\n\tfstat,\n\tfstatSync,\n\tfsync,\n\tfsyncSync,\n\tftruncate,\n\tftruncateSync,\n\tfutimes,\n\tfutimesSync,\n\tglob,\n\tlchmod,\n\tglobSync,\n\tlchmodSync,\n\tlchown,\n\tlchownSync,\n\tlink,\n\tlinkSync,\n\tlstat,\n\tlstatSync,\n\tlutimes,\n\tlutimesSync,\n\tmkdir,\n\tmkdirSync,\n\tmkdtemp,\n\tmkdtempSync,\n\topen,\n\topenAsBlob,\n\topenSync,\n\topendir,\n\topendirSync,\n\tread,\n\treadFile,\n\treadFileSync,\n\treadSync,\n\treaddir,\n\treaddirSync,\n\treadlink,\n\treadlinkSync,\n\treadv,\n\treadvSync,\n\trealpath,\n\trealpathSync,\n\trename,\n\trenameSync,\n\trm,\n\trmSync,\n\trmdir,\n\trmdirSync,\n\tstat,\n\tstatSync,\n\tstatfs,\n\tstatfsSync,\n\tsymlink,\n\tsymlinkSync,\n\ttruncate,\n\ttruncateSync,\n\tunlink,\n\tunlinkSync,\n\tunwatchFile,\n\tutimes,\n\tutimesSync,\n\twatch,\n\twatchFile,\n\twrite,\n\twriteFile,\n\twriteFileSync,\n\twriteSync,\n\twritev,\n\twritevSync\n};\n", "import libDefault from 'fs';\nmodule.exports = libDefault;", "import libDefault from 'path';\nmodule.exports = libDefault;", "// npx -y node@22.14 -e 'const{constants}=require(\"os\");console.log(Object.entries(constants).map(([k,v]) => `export const ${k} = ${JSON.stringify(v)}`).join(\"\\n\"))'\nexport const UV_UDP_REUSEADDR = 4;\nexport const dlopen = {\n\tRTLD_LAZY: 1,\n\tRTLD_NOW: 2,\n\tRTLD_GLOBAL: 256,\n\tRTLD_LOCAL: 0,\n\tRTLD_DEEPBIND: 8\n};\nexport const errno = {\n\tE2BIG: 7,\n\tEACCES: 13,\n\tEADDRINUSE: 98,\n\tEADDRNOTAVAIL: 99,\n\tEAFNOSUPPORT: 97,\n\tEAGAIN: 11,\n\tEALREADY: 114,\n\tEBADF: 9,\n\tEBADMSG: 74,\n\tEBUSY: 16,\n\tECANCELED: 125,\n\tECHILD: 10,\n\tECONNABORTED: 103,\n\tECONNREFUSED: 111,\n\tECONNRESET: 104,\n\tEDEADLK: 35,\n\tEDESTADDRREQ: 89,\n\tEDOM: 33,\n\tEDQUOT: 122,\n\tEEXIST: 17,\n\tEFAULT: 14,\n\tEFBIG: 27,\n\tEHOSTUNREACH: 113,\n\tEIDRM: 43,\n\tEILSEQ: 84,\n\tEINPROGRESS: 115,\n\tEINTR: 4,\n\tEINVAL: 22,\n\tEIO: 5,\n\tEISCONN: 106,\n\tEISDIR: 21,\n\tELOOP: 40,\n\tEMFILE: 24,\n\tEMLINK: 31,\n\tEMSGSIZE: 90,\n\tEMULTIHOP: 72,\n\tENAMETOOLONG: 36,\n\tENETDOWN: 100,\n\tENETRESET: 102,\n\tENETUNREACH: 101,\n\tENFILE: 23,\n\tENOBUFS: 105,\n\tENODATA: 61,\n\tENODEV: 19,\n\tENOENT: 2,\n\tENOEXEC: 8,\n\tENOLCK: 37,\n\tENOLINK: 67,\n\tENOMEM: 12,\n\tENOMSG: 42,\n\tENOPROTOOPT: 92,\n\tENOSPC: 28,\n\tENOSR: 63,\n\tENOSTR: 60,\n\tENOSYS: 38,\n\tENOTCONN: 107,\n\tENOTDIR: 20,\n\tENOTEMPTY: 39,\n\tENOTSOCK: 88,\n\tENOTSUP: 95,\n\tENOTTY: 25,\n\tENXIO: 6,\n\tEOPNOTSUPP: 95,\n\tEOVERFLOW: 75,\n\tEPERM: 1,\n\tEPIPE: 32,\n\tEPROTO: 71,\n\tEPROTONOSUPPORT: 93,\n\tEPROTOTYPE: 91,\n\tERANGE: 34,\n\tEROFS: 30,\n\tESPIPE: 29,\n\tESRCH: 3,\n\tESTALE: 116,\n\tETIME: 62,\n\tETIMEDOUT: 110,\n\tETXTBSY: 26,\n\tEWOULDBLOCK: 11,\n\tEXDEV: 18\n};\nexport const signals = {\n\tSIGHUP: 1,\n\tSIGINT: 2,\n\tSIGQUIT: 3,\n\tSIGILL: 4,\n\tSIGTRAP: 5,\n\tSIGABRT: 6,\n\tSIGIOT: 6,\n\tSIGBUS: 7,\n\tSIGFPE: 8,\n\tSIGKILL: 9,\n\tSIGUSR1: 10,\n\tSIGSEGV: 11,\n\tSIGUSR2: 12,\n\tSIGPIPE: 13,\n\tSIGALRM: 14,\n\tSIGTERM: 15,\n\tSIGCHLD: 17,\n\tSIGSTKFLT: 16,\n\tSIGCONT: 18,\n\tSIGSTOP: 19,\n\tSIGTSTP: 20,\n\tSIGTTIN: 21,\n\tSIGTTOU: 22,\n\tSIGURG: 23,\n\tSIGXCPU: 24,\n\tSIGXFSZ: 25,\n\tSIGVTALRM: 26,\n\tSIGPROF: 27,\n\tSIGWINCH: 28,\n\tSIGIO: 29,\n\tSIGPOLL: 29,\n\tSIGPWR: 30,\n\tSIGSYS: 31\n};\nexport const priority = {\n\tPRIORITY_LOW: 19,\n\tPRIORITY_BELOW_NORMAL: 10,\n\tPRIORITY_NORMAL: 0,\n\tPRIORITY_ABOVE_NORMAL: -7,\n\tPRIORITY_HIGH: -14,\n\tPRIORITY_HIGHEST: -20\n};\n", "import { notImplemented } from \"../_internal/utils.mjs\";\nimport { UV_UDP_REUSEADDR, dlopen, errno, signals, priority } from \"./internal/os/constants.mjs\";\nexport const constants = {\n\tUV_UDP_REUSEADDR,\n\tdlopen,\n\terrno,\n\tsignals,\n\tpriority\n};\nconst NUM_CPUS = 8;\nexport const availableParallelism = () => NUM_CPUS;\nexport const arch = () => \"\";\nexport const machine = () => \"\";\nexport const endianness = () => \"LE\";\nexport const cpus = () => {\n\tconst info = {\n\t\tmodel: \"\",\n\t\tspeed: 0,\n\t\ttimes: {\n\t\t\tuser: 0,\n\t\t\tnice: 0,\n\t\t\tsys: 0,\n\t\t\tidle: 0,\n\t\t\tirq: 0\n\t\t}\n\t};\n\treturn Array.from({ length: NUM_CPUS }, () => info);\n};\nexport const getPriority = () => 0;\nexport const setPriority = /* @__PURE__ */ notImplemented(\"os.setPriority\");\nexport const homedir = () => \"/\";\nexport const tmpdir = () => \"/tmp\";\nexport const devNull = \"/dev/null\";\nexport const freemem = () => 0;\nexport const totalmem = () => 0;\nexport const loadavg = () => [\n\t0,\n\t0,\n\t0\n];\nexport const uptime = () => 0;\nexport const hostname = () => \"\";\nexport const networkInterfaces = () => {\n\treturn { lo0: [\n\t\t{\n\t\t\taddress: \"127.0.0.1\",\n\t\t\tnetmask: \"255.0.0.0\",\n\t\t\tfamily: \"IPv4\",\n\t\t\tmac: \"00:00:00:00:00:00\",\n\t\t\tinternal: true,\n\t\t\tcidr: \"127.0.0.1/8\"\n\t\t},\n\t\t{\n\t\t\taddress: \"::1\",\n\t\t\tnetmask: \"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\",\n\t\t\tfamily: \"IPv6\",\n\t\t\tmac: \"00:00:00:00:00:00\",\n\t\t\tinternal: true,\n\t\t\tcidr: \"::1/128\",\n\t\t\tscopeid: 0\n\t\t},\n\t\t{\n\t\t\taddress: \"fe80::1\",\n\t\t\tnetmask: \"ffff:ffff:ffff:ffff::\",\n\t\t\tfamily: \"IPv6\",\n\t\t\tmac: \"00:00:00:00:00:00\",\n\t\t\tinternal: true,\n\t\t\tcidr: \"fe80::1/64\",\n\t\t\tscopeid: 1\n\t\t}\n\t] };\n};\nexport const platform = () => \"linux\";\nexport const type = () => \"Linux\";\nexport const release = () => \"\";\nexport const version = () => \"\";\nexport const userInfo = (opts) => {\n\tconst encode = (str) => {\n\t\tif (opts?.encoding) {\n\t\t\tconst buff = Buffer.from(str);\n\t\t\treturn opts.encoding === \"buffer\" ? buff : buff.toString(opts.encoding);\n\t\t}\n\t\treturn str;\n\t};\n\treturn {\n\t\tgid: 1e3,\n\t\tuid: 1e3,\n\t\thomedir: encode(\"/\"),\n\t\tshell: encode(\"/bin/sh\"),\n\t\tusername: encode(\"root\")\n\t};\n};\nexport const EOL = \"\\n\";\nexport default {\n\tarch,\n\tavailableParallelism,\n\tconstants,\n\tcpus,\n\tEOL,\n\tendianness,\n\tdevNull,\n\tfreemem,\n\tgetPriority,\n\thomedir,\n\thostname,\n\tloadavg,\n\tmachine,\n\tnetworkInterfaces,\n\tplatform,\n\trelease,\n\tsetPriority,\n\ttmpdir,\n\ttotalmem,\n\ttype,\n\tuptime,\n\tuserInfo,\n\tversion\n};\n", "import libDefault from 'os';\nmodule.exports = libDefault;", "// https://nodejs.org/api/crypto.html\n// https://github.com/unjs/uncrypto\nexport const subtle = globalThis.crypto?.subtle;\nexport const randomUUID = () => {\n\treturn globalThis.crypto?.randomUUID();\n};\nexport const getRandomValues = (array) => {\n\treturn globalThis.crypto?.getRandomValues(array);\n};\n", "import { notImplemented, notImplementedClass } from \"../../../_internal/utils.mjs\";\nimport { getRandomValues } from \"./web.mjs\";\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nconst MAX_RANDOM_VALUE_BYTES = 65536;\n// ---- implemented Utils ----\nexport const webcrypto = new Proxy(globalThis.crypto, { get(_, key) {\n\tif (key === \"CryptoKey\") {\n\t\treturn globalThis.CryptoKey;\n\t}\n\tif (typeof globalThis.crypto[key] === \"function\") {\n\t\t// @ts-ignore\n\t\treturn globalThis.crypto[key].bind(globalThis.crypto);\n\t}\n\treturn globalThis.crypto[key];\n} });\nexport const randomBytes = (size, cb) => {\n\tconst bytes = Buffer.alloc(size, 0, undefined);\n\tfor (let generated = 0; generated < size; generated += MAX_RANDOM_VALUE_BYTES) {\n\t\tgetRandomValues(\n\t\t\t// Use subarray to get a view of the buffer\n\t\t\tUint8Array.prototype.subarray.call(bytes, generated, generated + MAX_RANDOM_VALUE_BYTES)\n\t\t);\n\t}\n\tif (typeof cb === \"function\") {\n\t\tcb(null, bytes);\n\t\treturn undefined;\n\t}\n\treturn bytes;\n};\nexport const rng = randomBytes;\nexport const prng = randomBytes;\n// ---- Constants ----\nexport const fips = false;\n// ---- Unimplemented utils ----\nexport const checkPrime = /* @__PURE__ */ notImplemented(\"crypto.checkPrime\");\nexport const checkPrimeSync = /* @__PURE__ */ notImplemented(\"crypto.checkPrimeSync\");\n/** @deprecated */\nexport const createCipher = /* @__PURE__ */ notImplemented(\"crypto.createCipher\");\n/** @deprecated */\nexport const createDecipher = /* @__PURE__ */ notImplemented(\"crypto.createDecipher\");\nexport const pseudoRandomBytes = /* @__PURE__ */ notImplemented(\"crypto.pseudoRandomBytes\");\nexport const createCipheriv = /* @__PURE__ */ notImplemented(\"crypto.createCipheriv\");\nexport const createDecipheriv = /* @__PURE__ */ notImplemented(\"crypto.createDecipheriv\");\nexport const createDiffieHellman = /* @__PURE__ */ notImplemented(\"crypto.createDiffieHellman\");\nexport const createDiffieHellmanGroup = /* @__PURE__ */ notImplemented(\"crypto.createDiffieHellmanGroup\");\nexport const createECDH = /* @__PURE__ */ notImplemented(\"crypto.createECDH\");\nexport const createHash = /* @__PURE__ */ notImplemented(\"crypto.createHash\");\nexport const createHmac = /* @__PURE__ */ notImplemented(\"crypto.createHmac\");\nexport const createPrivateKey = /* @__PURE__ */ notImplemented(\"crypto.createPrivateKey\");\nexport const createPublicKey = /* @__PURE__ */ notImplemented(\"crypto.createPublicKey\");\nexport const createSecretKey = /* @__PURE__ */ notImplemented(\"crypto.createSecretKey\");\nexport const createSign = /* @__PURE__ */ notImplemented(\"crypto.createSign\");\nexport const createVerify = /* @__PURE__ */ notImplemented(\"crypto.createVerify\");\nexport const diffieHellman = /* @__PURE__ */ notImplemented(\"crypto.diffieHellman\");\nexport const generatePrime = /* @__PURE__ */ notImplemented(\"crypto.generatePrime\");\nexport const generatePrimeSync = /* @__PURE__ */ notImplemented(\"crypto.generatePrimeSync\");\nexport const getCiphers = /* @__PURE__ */ notImplemented(\"crypto.getCiphers\");\nexport const getCipherInfo = /* @__PURE__ */ notImplemented(\"crypto.getCipherInfo\");\nexport const getCurves = /* @__PURE__ */ notImplemented(\"crypto.getCurves\");\nexport const getDiffieHellman = /* @__PURE__ */ notImplemented(\"crypto.getDiffieHellman\");\nexport const getHashes = /* @__PURE__ */ notImplemented(\"crypto.getHashes\");\nexport const hkdf = /* @__PURE__ */ notImplemented(\"crypto.hkdf\");\nexport const hkdfSync = /* @__PURE__ */ notImplemented(\"crypto.hkdfSync\");\nexport const pbkdf2 = /* @__PURE__ */ notImplemented(\"crypto.pbkdf2\");\nexport const pbkdf2Sync = /* @__PURE__ */ notImplemented(\"crypto.pbkdf2Sync\");\nexport const generateKeyPair = /* @__PURE__ */ notImplemented(\"crypto.generateKeyPair\");\nexport const generateKeyPairSync = /* @__PURE__ */ notImplemented(\"crypto.generateKeyPairSync\");\nexport const generateKey = /* @__PURE__ */ notImplemented(\"crypto.generateKey\");\nexport const generateKeySync = /* @__PURE__ */ notImplemented(\"crypto.generateKeySync\");\nexport const privateDecrypt = /* @__PURE__ */ notImplemented(\"crypto.privateDecrypt\");\nexport const privateEncrypt = /* @__PURE__ */ notImplemented(\"crypto.privateEncrypt\");\nexport const publicDecrypt = /* @__PURE__ */ notImplemented(\"crypto.publicDecrypt\");\nexport const publicEncrypt = /* @__PURE__ */ notImplemented(\"crypto.publicEncrypt\");\nexport const randomFill = /* @__PURE__ */ notImplemented(\"crypto.randomFill\");\nexport const randomFillSync = /* @__PURE__ */ notImplemented(\"crypto.randomFillSync\");\nexport const randomInt = /* @__PURE__ */ notImplemented(\"crypto.randomInt\");\nexport const scrypt = /* @__PURE__ */ notImplemented(\"crypto.scrypt\");\nexport const scryptSync = /* @__PURE__ */ notImplemented(\"crypto.scryptSync\");\nexport const sign = /* @__PURE__ */ notImplemented(\"crypto.sign\");\nexport const setEngine = /* @__PURE__ */ notImplemented(\"crypto.setEngine\");\nexport const timingSafeEqual = /* @__PURE__ */ notImplemented(\"crypto.timingSafeEqual\");\nexport const getFips = /* @__PURE__ */ notImplemented(\"crypto.getFips\");\nexport const setFips = /* @__PURE__ */ notImplemented(\"crypto.setFips\");\nexport const verify = /* @__PURE__ */ notImplemented(\"crypto.verify\");\nexport const secureHeapUsed = /* @__PURE__ */ notImplemented(\"crypto.secureHeapUsed\");\nexport const hash = /* @__PURE__ */ notImplemented(\"crypto.hash\");\n// ---- Unimplemented Classes ----\nexport const Certificate = /* @__PURE__ */ notImplementedClass(\"crypto.Certificate\");\nexport const Cipher = /* @__PURE__ */ notImplementedClass(\"crypto.Cipher\");\nexport const Cipheriv = /* @__PURE__ */ notImplementedClass(\n\t\"crypto.Cipheriv\"\n\t// @ts-expect-error not typed yet\n);\nexport const Decipher = /* @__PURE__ */ notImplementedClass(\"crypto.Decipher\");\nexport const Decipheriv = /* @__PURE__ */ notImplementedClass(\n\t\"crypto.Decipheriv\"\n\t// @ts-expect-error not typed yet\n);\nexport const DiffieHellman = /* @__PURE__ */ notImplementedClass(\"crypto.DiffieHellman\");\nexport const DiffieHellmanGroup = /* @__PURE__ */ notImplementedClass(\"crypto.DiffieHellmanGroup\");\nexport const ECDH = /* @__PURE__ */ notImplementedClass(\"crypto.ECDH\");\nexport const Hash = /* @__PURE__ */ notImplementedClass(\"crypto.Hash\");\nexport const Hmac = /* @__PURE__ */ notImplementedClass(\"crypto.Hmac\");\nexport const KeyObject = /* @__PURE__ */ notImplementedClass(\"crypto.KeyObject\");\nexport const Sign = /* @__PURE__ */ notImplementedClass(\"crypto.Sign\");\nexport const Verify = /* @__PURE__ */ notImplementedClass(\"crypto.Verify\");\nexport const X509Certificate = /* @__PURE__ */ notImplementedClass(\"crypto.X509Certificate\");\n", "import { getRandomValues, randomUUID, subtle } from \"./internal/crypto/web.mjs\";\nimport { Certificate, Cipher, Cipheriv, Decipher, Decipheriv, DiffieHellman, DiffieHellmanGroup, ECDH, Hash, Hmac, KeyObject, Sign, Verify, X509Certificate, checkPrime, checkPrimeSync, createCipheriv, createDecipheriv, createDiffieHellman, createDiffieHellmanGroup, createECDH, createHash, createHmac, createPrivateKey, createPublicKey, createSecretKey, createSign, createVerify, diffieHellman, fips, generateKey, generateKeyPair, generateKeyPairSync, generateKeySync, generatePrime, generatePrimeSync, getCipherInfo, getCiphers, getCurves, getDiffieHellman, getFips, getHashes, hash, hkdf, hkdfSync, pbkdf2, pbkdf2Sync, privateDecrypt, privateEncrypt, pseudoRandomBytes, publicDecrypt, prng, publicEncrypt, randomBytes, randomFill, randomFillSync, randomInt, rng, scrypt, scryptSync, secureHeapUsed, setEngine, setFips, sign, timingSafeEqual, verify, webcrypto } from \"./internal/crypto/node.mjs\";\n// prettier-ignore\nimport { OPENSSL_VERSION_NUMBER, SSL_OP_ALL, SSL_OP_ALLOW_NO_DHE_KEX, SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION, SSL_OP_CIPHER_SERVER_PREFERENCE, SSL_OP_CISCO_ANYCONNECT, SSL_OP_COOKIE_EXCHANGE, SSL_OP_CRYPTOPRO_TLSEXT_BUG, SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS, SSL_OP_LEGACY_SERVER_CONNECT, SSL_OP_NO_COMPRESSION, SSL_OP_NO_ENCRYPT_THEN_MAC, SSL_OP_NO_QUERY_MTU, SSL_OP_NO_RENEGOTIATION, SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION, SSL_OP_NO_SSLv2, SSL_OP_NO_SSLv3, SSL_OP_NO_TICKET, SSL_OP_NO_TLSv1, SSL_OP_NO_TLSv1_1, SSL_OP_NO_TLSv1_2, SSL_OP_NO_TLSv1_3, SSL_OP_PRIORITIZE_CHACHA, SSL_OP_TLS_ROLLBACK_BUG, ENGINE_METHOD_RSA, ENGINE_METHOD_DSA, ENGINE_METHOD_DH, ENGINE_METHOD_RAND, ENGINE_METHOD_EC, ENGINE_METHOD_CIPHERS, ENGINE_METHOD_DIGESTS, ENGINE_METHOD_PKEY_METHS, ENGINE_METHOD_PKEY_ASN1_METHS, ENGINE_METHOD_ALL, ENGINE_METHOD_NONE, DH_CHECK_P_NOT_SAFE_PRIME, DH_CHECK_P_NOT_PRIME, DH_UNABLE_TO_CHECK_GENERATOR, DH_NOT_SUITABLE_GENERATOR, RSA_PKCS1_PADDING, RSA_NO_PADDING, RSA_PKCS1_OAEP_PADDING, RSA_X931_PADDING, RSA_PKCS1_PSS_PADDING, RSA_PSS_SALTLEN_DIGEST, RSA_PSS_SALTLEN_MAX_SIGN, RSA_PSS_SALTLEN_AUTO, defaultCoreCipherList, TLS1_VERSION, TLS1_1_VERSION, TLS1_2_VERSION, TLS1_3_VERSION, POINT_CONVERSION_COMPRESSED, POINT_CONVERSION_UNCOMPRESSED, POINT_CONVERSION_HYBRID, defaultCipherList } from \"./internal/crypto/constants.mjs\";\nexport * from \"./internal/crypto/web.mjs\";\nexport * from \"./internal/crypto/node.mjs\";\n// prettier-ignore\nexport const constants = {\n\tOPENSSL_VERSION_NUMBER,\n\tSSL_OP_ALL,\n\tSSL_OP_ALLOW_NO_DHE_KEX,\n\tSSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION,\n\tSSL_OP_CIPHER_SERVER_PREFERENCE,\n\tSSL_OP_CISCO_ANYCONNECT,\n\tSSL_OP_COOKIE_EXCHANGE,\n\tSSL_OP_CRYPTOPRO_TLSEXT_BUG,\n\tSSL_OP_DONT_INSERT_EMPTY_FRAGMENTS,\n\tSSL_OP_LEGACY_SERVER_CONNECT,\n\tSSL_OP_NO_COMPRESSION,\n\tSSL_OP_NO_ENCRYPT_THEN_MAC,\n\tSSL_OP_NO_QUERY_MTU,\n\tSSL_OP_NO_RENEGOTIATION,\n\tSSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION,\n\tSSL_OP_NO_SSLv2,\n\tSSL_OP_NO_SSLv3,\n\tSSL_OP_NO_TICKET,\n\tSSL_OP_NO_TLSv1,\n\tSSL_OP_NO_TLSv1_1,\n\tSSL_OP_NO_TLSv1_2,\n\tSSL_OP_NO_TLSv1_3,\n\tSSL_OP_PRIORITIZE_CHACHA,\n\tSSL_OP_TLS_ROLLBACK_BUG,\n\tENGINE_METHOD_RSA,\n\tENGINE_METHOD_DSA,\n\tENGINE_METHOD_DH,\n\tENGINE_METHOD_RAND,\n\tENGINE_METHOD_EC,\n\tENGINE_METHOD_CIPHERS,\n\tENGINE_METHOD_DIGESTS,\n\tENGINE_METHOD_PKEY_METHS,\n\tENGINE_METHOD_PKEY_ASN1_METHS,\n\tENGINE_METHOD_ALL,\n\tENGINE_METHOD_NONE,\n\tDH_CHECK_P_NOT_SAFE_PRIME,\n\tDH_CHECK_P_NOT_PRIME,\n\tDH_UNABLE_TO_CHECK_GENERATOR,\n\tDH_NOT_SUITABLE_GENERATOR,\n\tRSA_PKCS1_PADDING,\n\tRSA_NO_PADDING,\n\tRSA_PKCS1_OAEP_PADDING,\n\tRSA_X931_PADDING,\n\tRSA_PKCS1_PSS_PADDING,\n\tRSA_PSS_SALTLEN_DIGEST,\n\tRSA_PSS_SALTLEN_MAX_SIGN,\n\tRSA_PSS_SALTLEN_AUTO,\n\tdefaultCoreCipherList,\n\tTLS1_VERSION,\n\tTLS1_1_VERSION,\n\tTLS1_2_VERSION,\n\tTLS1_3_VERSION,\n\tPOINT_CONVERSION_COMPRESSED,\n\tPOINT_CONVERSION_UNCOMPRESSED,\n\tPOINT_CONVERSION_HYBRID,\n\tdefaultCipherList\n};\nexport default {\n\tconstants,\n\tgetRandomValues,\n\trandomUUID,\n\tsubtle,\n\tCertificate,\n\tCipher,\n\tCipheriv,\n\tDecipher,\n\tDecipheriv,\n\tDiffieHellman,\n\tDiffieHellmanGroup,\n\tECDH,\n\tHash,\n\tHmac,\n\tKeyObject,\n\tSign,\n\tVerify,\n\tX509Certificate,\n\tcheckPrime,\n\tcheckPrimeSync,\n\tcreateCipheriv,\n\tcreateDecipheriv,\n\tcreateDiffieHellman,\n\tcreateDiffieHellmanGroup,\n\tcreateECDH,\n\tcreateHash,\n\tcreateHmac,\n\tcreatePrivateKey,\n\tcreatePublicKey,\n\tcreateSecretKey,\n\tcreateSign,\n\tcreateVerify,\n\tdiffieHellman,\n\tfips,\n\tgenerateKey,\n\tgenerateKeyPair,\n\tgenerateKeyPairSync,\n\tgenerateKeySync,\n\tgeneratePrime,\n\tgeneratePrimeSync,\n\tgetCipherInfo,\n\tgetCiphers,\n\tgetCurves,\n\tgetDiffieHellman,\n\tgetFips,\n\tgetHashes,\n\thash,\n\thkdf,\n\thkdfSync,\n\tpbkdf2,\n\tpbkdf2Sync,\n\tprivateDecrypt,\n\tprivateEncrypt,\n\tpseudoRandomBytes,\n\tpublicDecrypt,\n\tprng,\n\tpublicEncrypt,\n\trandomBytes,\n\trandomFill,\n\trandomFillSync,\n\trandomInt,\n\trng,\n\tscrypt,\n\tscryptSync,\n\tsecureHeapUsed,\n\tsetEngine,\n\tsetFips,\n\tsign,\n\ttimingSafeEqual,\n\tverify,\n\twebcrypto\n};\n", "import {\n  Cipher,\n  createCipher,\n  createDecipher,\n  Decipher,\n  pseudoRandomBytes,\n  webcrypto as unenvCryptoWebcrypto\n} from \"unenv/node/crypto\";\nexport { Cipher, Decipher } from \"unenv/node/crypto\";\nconst workerdCrypto = process.getBuiltinModule(\"node:crypto\");\nexport const {\n  Certificate,\n  checkPrime,\n  checkPrimeSync,\n  constants,\n  // @ts-expect-error  Node types do not match unenv\n  Cipheriv,\n  createCipheriv,\n  createDecipheriv,\n  createDiffieHellman,\n  createDiffieHellmanGroup,\n  createECDH,\n  createHash,\n  createHmac,\n  createPrivateKey,\n  createPublicKey,\n  createSecretKey,\n  createSign,\n  createVerify,\n  // @ts-expect-error  Node types do not match unenv\n  Decipheriv,\n  diffieHellman,\n  DiffieHellman,\n  DiffieHellmanGroup,\n  ECDH,\n  fips,\n  generateKey,\n  generateKeyPair,\n  generateKeyPairSync,\n  generateKeySync,\n  generatePrime,\n  generatePrimeSync,\n  getCipherInfo,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getFips,\n  getHashes,\n  getRandomValues,\n  hash,\n  Hash,\n  hkdf,\n  hkdfSync,\n  Hmac,\n  KeyObject,\n  pbkdf2,\n  pbkdf2Sync,\n  privateDecrypt,\n  privateEncrypt,\n  publicDecrypt,\n  publicEncrypt,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  randomInt,\n  randomUUID,\n  scrypt,\n  scryptSync,\n  secureHeapUsed,\n  setEngine,\n  setFips,\n  sign,\n  Sign,\n  subtle,\n  timingSafeEqual,\n  verify,\n  Verify,\n  X509Certificate\n} = workerdCrypto;\nexport const webcrypto = {\n  // @ts-expect-error Node types do not match unenv\n  CryptoKey: unenvCryptoWebcrypto.CryptoKey,\n  getRandomValues,\n  randomUUID,\n  subtle\n};\nexport default {\n  /**\n   * manually unroll unenv-polyfilled-symbols to make it tree-shakeable\n   */\n  Certificate,\n  Cipher,\n  Cipheriv,\n  Decipher,\n  Decipheriv,\n  ECDH,\n  Sign,\n  Verify,\n  X509Certificate,\n  constants,\n  createCipheriv,\n  createDecipheriv,\n  createECDH,\n  createSign,\n  createVerify,\n  diffieHellman,\n  getCipherInfo,\n  hash,\n  privateDecrypt,\n  privateEncrypt,\n  publicDecrypt,\n  publicEncrypt,\n  scrypt,\n  scryptSync,\n  sign,\n  verify,\n  // default-only export from unenv\n  // @ts-expect-error unenv has unknown type\n  createCipher,\n  // @ts-expect-error unenv has unknown type\n  createDecipher,\n  // @ts-expect-error unenv has unknown type\n  pseudoRandomBytes,\n  /**\n   * manually unroll workerd-polyfilled-symbols to make it tree-shakeable\n   */\n  DiffieHellman,\n  DiffieHellmanGroup,\n  Hash,\n  Hmac,\n  KeyObject,\n  checkPrime,\n  checkPrimeSync,\n  createDiffieHellman,\n  createDiffieHellmanGroup,\n  createHash,\n  createHmac,\n  createPrivateKey,\n  createPublicKey,\n  createSecretKey,\n  generateKey,\n  generateKeyPair,\n  generateKeyPairSync,\n  generateKeySync,\n  generatePrime,\n  generatePrimeSync,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getFips,\n  getHashes,\n  getRandomValues,\n  hkdf,\n  hkdfSync,\n  pbkdf2,\n  pbkdf2Sync,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  randomInt,\n  randomUUID,\n  secureHeapUsed,\n  setEngine,\n  setFips,\n  subtle,\n  timingSafeEqual,\n  // default-only export from workerd\n  fips,\n  // special-cased deep merged symbols\n  webcrypto\n};\n", "import libDefault from 'crypto';\nmodule.exports = libDefault;", "{\n  \"name\": \"dotenv\",\n  \"version\": \"16.6.1\",\n  \"description\": \"Loads environment variables from .env file\",\n  \"main\": \"lib/main.js\",\n  \"types\": \"lib/main.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./lib/main.d.ts\",\n      \"require\": \"./lib/main.js\",\n      \"default\": \"./lib/main.js\"\n    },\n    \"./config\": \"./config.js\",\n    \"./config.js\": \"./config.js\",\n    \"./lib/env-options\": \"./lib/env-options.js\",\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"scripts\": {\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\n    \"lint\": \"standard\",\n    \"pretest\": \"npm run lint && npm run dts-check\",\n    \"test\": \"tap run --allow-empty-coverage --disable-coverage --timeout=60000\",\n    \"test:coverage\": \"tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov\",\n    \"prerelease\": \"npm test\",\n    \"release\": \"standard-version\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\n  },\n  \"homepage\": \"https://github.com/motdotla/dotenv#readme\",\n  \"funding\": \"https://dotenvx.com\",\n  \"keywords\": [\n    \"dotenv\",\n    \"env\",\n    \".env\",\n    \"environment\",\n    \"variables\",\n    \"config\",\n    \"settings\"\n  ],\n  \"readmeFilename\": \"README.md\",\n  \"license\": \"BSD-2-Clause\",\n  \"devDependencies\": {\n    \"@types/node\": \"^18.11.3\",\n    \"decache\": \"^4.6.2\",\n    \"sinon\": \"^14.0.1\",\n    \"standard\": \"^17.0.0\",\n    \"standard-version\": \"^9.5.0\",\n    \"tap\": \"^19.2.0\",\n    \"typescript\": \"^4.8.4\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  },\n  \"browser\": {\n    \"fs\": false\n  }\n}\n", "const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  options = options || {}\n\n  const vaultPath = _vaultPath(options)\n  options.path = vaultPath // parse .env.vault\n  const result = DotenvModule.configDotenv(options)\n  if (!result.parsed) {\n    const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n    err.code = 'MISSING_DATA'\n    throw err\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenvx.com/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      const err = new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing key part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing environment part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n    err.code = 'NOT_FOUND_DOTENV_ENVIRONMENT'\n    throw err\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let possibleVaultPath = null\n\n  if (options && options.path && options.path.length > 0) {\n    if (Array.isArray(options.path)) {\n      for (const filepath of options.path) {\n        if (fs.existsSync(filepath)) {\n          possibleVaultPath = filepath.endsWith('.vault') ? filepath : `${filepath}.vault`\n        }\n      }\n    } else {\n      possibleVaultPath = options.path.endsWith('.vault') ? options.path : `${options.path}.vault`\n    }\n  } else {\n    possibleVaultPath = path.resolve(process.cwd(), '.env.vault')\n  }\n\n  if (fs.existsSync(possibleVaultPath)) {\n    return possibleVaultPath\n  }\n\n  return null\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  const debug = Boolean(options && options.debug)\n  const quiet = options && 'quiet' in options ? options.quiet : true\n\n  if (debug || !quiet) {\n    _log('Loading env from encrypted .env.vault')\n  }\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  const dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const quiet = options && 'quiet' in options ? options.quiet : true\n\n  if (options && options.encoding) {\n    encoding = options.encoding\n  } else {\n    if (debug) {\n      _debug('No encoding is specified. UTF-8 is used by default')\n    }\n  }\n\n  let optionPaths = [dotenvPath] // default, look for .env\n  if (options && options.path) {\n    if (!Array.isArray(options.path)) {\n      optionPaths = [_resolveHome(options.path)]\n    } else {\n      optionPaths = [] // reset default\n      for (const filepath of options.path) {\n        optionPaths.push(_resolveHome(filepath))\n      }\n    }\n  }\n\n  // Build the parsed data in a temporary object (because we need to return it).  Once we have the final\n  // parsed data, we will combine it with process.env (or options.processEnv if provided).\n  let lastError\n  const parsedAll = {}\n  for (const path of optionPaths) {\n    try {\n      // Specifying an encoding returns a string instead of a buffer\n      const parsed = DotenvModule.parse(fs.readFileSync(path, { encoding }))\n\n      DotenvModule.populate(parsedAll, parsed, options)\n    } catch (e) {\n      if (debug) {\n        _debug(`Failed to load ${path} ${e.message}`)\n      }\n      lastError = e\n    }\n  }\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsedAll, options)\n\n  if (debug || !quiet) {\n    const keysCount = Object.keys(parsedAll).length\n    const shortPaths = []\n    for (const filePath of optionPaths) {\n      try {\n        const relative = path.relative(process.cwd(), filePath)\n        shortPaths.push(relative)\n      } catch (e) {\n        if (debug) {\n          _debug(`Failed to load ${filePath} ${e.message}`)\n        }\n        lastError = e\n      }\n    }\n\n    _log(`injecting env (${keysCount}) from ${shortPaths.join(',')}`)\n  }\n\n  if (lastError) {\n    return { parsed: parsedAll, error: lastError }\n  } else {\n    return { parsed: parsedAll }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  const vaultPath = _vaultPath(options)\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!vaultPath) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.subarray(0, 12)\n  const authTag = ciphertext.subarray(-16)\n  ciphertext = ciphertext.subarray(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const err = new Error('INVALID_DOTENV_KEY: It must be 64 characters long (or more)')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    } else if (decryptionFailed) {\n      const err = new Error('DECRYPTION_FAILED: Please check your DOTENV_KEY')\n      err.code = 'DECRYPTION_FAILED'\n      throw err\n    } else {\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    const err = new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n    err.code = 'OBJECT_REQUIRED'\n    throw err\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n", "// ../config.js accepts options via environment variables\nconst options = {}\n\nif (process.env.DOTENV_CONFIG_ENCODING != null) {\n  options.encoding = process.env.DOTENV_CONFIG_ENCODING\n}\n\nif (process.env.DOTENV_CONFIG_PATH != null) {\n  options.path = process.env.DOTENV_CONFIG_PATH\n}\n\nif (process.env.DOTENV_CONFIG_QUIET != null) {\n  options.quiet = process.env.DOTENV_CONFIG_QUIET\n}\n\nif (process.env.DOTENV_CONFIG_DEBUG != null) {\n  options.debug = process.env.DOTENV_CONFIG_DEBUG\n}\n\nif (process.env.DOTENV_CONFIG_OVERRIDE != null) {\n  options.override = process.env.DOTENV_CONFIG_OVERRIDE\n}\n\nif (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {\n  options.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY\n}\n\nmodule.exports = options\n", "const re = /^dotenv_config_(encoding|path|quiet|debug|override|DOTENV_KEY)=(.+)$/\n\nmodule.exports = function optionMatcher (args) {\n  const options = args.reduce(function (acc, cur) {\n    const matches = cur.match(re)\n    if (matches) {\n      acc[matches[1]] = matches[2]\n    }\n    return acc\n  }, {})\n\n  if (!('quiet' in options)) {\n    options.quiet = 'true'\n  }\n\n  return options\n}\n", "(function () {\n  require('./lib/main').config(\n    Object.assign(\n      {},\n      require('./lib/env-options'),\n      require('./lib/cli-options')(process.argv)\n    )\n  )\n})()\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/reg-exp-router/index.ts\nimport { RegExpRouter } from \"./router.js\";\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/smart-router/index.ts\nimport { SmartRouter } from \"./router.js\";\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (!part) {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/index.ts\nimport { TrieRouter } from \"./router.js\";\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/index.ts\nimport { Hono } from \"./hono.js\";\nexport {\n  Hono\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "import { RequestHandler } from \"express\";\r\nimport { DemoResponse } from \"@shared/api\";\r\n\r\nexport const handleDemo: RequestHandler = (req, res) => {\r\n  const response: DemoResponse = {\r\n    message: \"Hello from Express server\",\r\n  };\r\n  res.status(200).json(response);\r\n};\r\n", "import { Context } from \"hono\";\r\nimport { SkyjoPlayer, SkyjoGameRoom, SkyjoCard } from \"@shared/skyjo\";\r\n\r\n// La logique interne du jeu, les interfaces, et le stockage en m\u00E9moire ne changent pas.\r\n// ... (Toutes vos fonctions internes comme createSkyjoDeck, initializeSkyjoPlayer, etc. restent ici)\r\n\r\nfunction createSkyjoCard(value: number, id: string): SkyjoCard {\r\n  return { id, value, isRevealed: false };\r\n}\r\n\r\nfunction createSkyjoDeck(): number[] {\r\n  const deck: number[] = [];\r\n  for (let i = 0; i < 5; i++) deck.push(-2);\r\n  for (let i = 0; i < 10; i++) deck.push(-1);\r\n  for (let i = 0; i < 15; i++) deck.push(0);\r\n  for (let value = 1; value <= 12; value++) {\r\n    for (let i = 0; i < 10; i++) deck.push(value);\r\n  }\r\n  for (let i = deck.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [deck[i], deck[j]] = [deck[j], deck[i]];\r\n  }\r\n  return deck;\r\n}\r\n\r\nfunction initializeSkyjoPlayer(\r\n  playerId: string,\r\n  playerName: string,\r\n  deck: number[],\r\n): SkyjoPlayer {\r\n  const player: SkyjoPlayer = {\r\n    id: playerId,\r\n    name: playerName,\r\n    cards: [],\r\n    score: 0,\r\n    totalScore: 0,\r\n    isConnected: true,\r\n  };\r\n  for (let row = 0; row < 3; row++) {\r\n    player.cards[row] = [];\r\n    for (let col = 0; col < 4; col++) {\r\n      const value = deck.pop()!;\r\n      player.cards[row][col] = createSkyjoCard(\r\n        value,\r\n        `${playerId}-${row}-${col}`,\r\n      );\r\n    }\r\n  }\r\n  return player;\r\n}\r\n\r\nfunction checkAndRemoveColumn(player: SkyjoPlayer, col: number): boolean {\r\n  const card1 = player.cards[0][col];\r\n  const card2 = player.cards[1][col];\r\n  const card3 = player.cards[2][col];\r\n  if (card1.isRevealed && card2.isRevealed && card3.isRevealed) {\r\n    if (card1.value === card2.value && card2.value === card3.value) {\r\n      player.cards[0][col] = createSkyjoCard(999, `removed-${col}-0`);\r\n      player.cards[1][col] = createSkyjoCard(999, `removed-${col}-1`);\r\n      player.cards[2][col] = createSkyjoCard(999, `removed-${col}-2`);\r\n      player.cards[0][col].isRevealed = true;\r\n      player.cards[1][col].isRevealed = true;\r\n      player.cards[2][col].isRevealed = true;\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction allCardsRevealed(player: SkyjoPlayer): boolean {\r\n  for (let row = 0; row < 3; row++) {\r\n    for (let col = 0; col < 4; col++) {\r\n      if (!player.cards[row][col].isRevealed && player.cards[row][col].value !== 999) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction finalizeRoundScoring(room: SkyjoGameRoom, finishingPlayerId: string): void {\r\n  room.players.forEach((player: any) => {\r\n    for (let row = 0; row < 3; row++) {\r\n      for (let col = 0; col < 4; col++) {\r\n        if (player.cards[row][col].value !== 999) {\r\n          player.cards[row][col].isRevealed = true;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  room.players.forEach((player: any) => {\r\n    player.score = 0;\r\n    for (let row = 0; row < 3; row++) {\r\n      for (let col = 0; col < 4; col++) {\r\n        if (player.cards[row][col].value !== 999) {\r\n          player.score += player.cards[row][col].value;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  const finishingPlayer = room.players.find((p) => p.id === finishingPlayerId);\r\n  if (finishingPlayer) {\r\n    const lowestScore = Math.min(...room.players.map((p: any) => p.score));\r\n    if ((finishingPlayer as any).score > lowestScore) {\r\n      (finishingPlayer as any).score *= 2;\r\n    }\r\n  }\r\n  room.players.forEach((player: any) => {\r\n    player.totalScore += player.score;\r\n  });\r\n}\r\n\r\ninterface UnoCard {\r\n  id: string;\r\n  color: \"red\" | \"blue\" | \"green\" | \"yellow\" | \"wild\";\r\n  type: \"number\" | \"skip\" | \"reverse\" | \"draw2\" | \"wild\" | \"wild_draw4\"; //type can be number, skip, reverse, draw2, wild, or wild_draw4\r\n  value?: number;\r\n}\r\n\r\ninterface Player {\r\n  id: string;\r\n  name: string;\r\n  cards: UnoCard[] | any[][]; \r\n  isConnected: boolean;\r\n  score?: number; // Skyjo only\r\n  totalScore?: number; // Skyjo only\r\n}\r\n\r\ninterface GameRoom {\r\n  id: string;\r\n  name: string;\r\n  gameType: \"uno\" | \"skyjo\";\r\n  players: Player[];\r\n  maxPlayers: number;\r\n  isStarted: boolean;\r\n  currentPlayer?: string;\r\n  direction?: 1 | -1; \r\n  topCard?: UnoCard; // UNO only\r\n  deck: UnoCard[] | number[]; // UNO cards or Skyjo card values\r\n  discardPile: UnoCard[] | number[]; // UNO cards or Skyjo card values\r\n  winner?: string;\r\n  drawPenalty?: number; // UNO only - Number of cards next player must draw\r\n  wildColor?: \"red\" | \"blue\" | \"green\" | \"yellow\"; // UNO only - Color chosen for wild cards\r\n  unoCalledBy?: string; // UNO only - Player who called UNO\r\n  unoChallengeTime?: number; // UNO only - Timestamp when UNO can be challenged\r\n  isFinished?: boolean; // Game has ended\r\n  round?: number; // Skyjo only - Current round number\r\n}\r\nconst rooms = new Map<string, GameRoom>();\r\n\r\nfunction generateRoomCode(): string {\r\n  const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  let result = \"\";\r\n  for (let i = 0; i < 6; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction createDeck(): UnoCard[] {\r\n  const deck: UnoCard[] = [];\r\n  const colors: (\"red\" | \"blue\" | \"green\" | \"yellow\")[] = [\r\n    \"red\",\r\n    \"blue\",\r\n    \"green\",\r\n    \"yellow\",\r\n  ];\r\n\r\n  // Add number cards (108 cards total)\r\n  colors.forEach((color) => {\r\n    // One 0 card per color (4 cards)\r\n    deck.push({\r\n      id: `${color}-0-${Math.random().toString(36).substr(2, 9)}`,\r\n      color,\r\n      type: \"number\",\r\n      value: 0,\r\n    });\r\n\r\n    // Two of each number 1-9 per color (72 cards)\r\n    for (let value = 1; value <= 9; value++) {\r\n      for (let copy = 0; copy < 2; copy++) {\r\n        deck.push({\r\n          id: `${color}-${value}-${copy}-${Math.random().toString(36).substr(2, 9)}`,\r\n          color,\r\n          type: \"number\",\r\n          value,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Two of each action card per color (24 cards)\r\n    [\"skip\", \"reverse\", \"draw2\"].forEach((type) => {\r\n      for (let copy = 0; copy < 2; copy++) {\r\n        deck.push({\r\n          id: `${color}-${type}-${copy}-${Math.random().toString(36).substr(2, 9)}`,\r\n          color,\r\n          type: type as any,\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // Wild cards (8 cards)\r\n  for (let i = 0; i < 4; i++) {\r\n    deck.push({\r\n      id: `wild-${i}-${Math.random().toString(36).substr(2, 9)}`,\r\n      color: \"wild\",\r\n      type: \"wild\",\r\n    });\r\n\r\n    deck.push({\r\n      id: `wild-draw4-${i}-${Math.random().toString(36).substr(2, 9)}`,\r\n      color: \"wild\",\r\n      type: \"wild_draw4\",\r\n    });\r\n  }\r\n\r\n  return shuffleDeck(deck);\r\n}\r\n\r\nfunction shuffleDeck(deck: UnoCard[]): UnoCard[] {\r\n  const shuffled = [...deck];\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n  }\r\n  return shuffled;\r\n}\r\n\r\nexport const createRoom = async (c: Context) => {\r\n  const { playerName, maxPlayers = 4, gameType = \"uno\" } = await c.req.json();\r\n\r\n  if (!playerName || typeof playerName !== \"string\") {\r\n    return c.json({ error: \"Nom de joueur requis\" }, 400);\r\n  }\r\n\r\n  const roomId = generateRoomCode();\r\n  const playerId = `player_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n  const player: Player = { id: playerId, name: playerName.trim(), cards: [], isConnected: true };\r\n  const room: GameRoom = { id: roomId, name: `Salon ${roomId}`, gameType: gameType as any, players: [player], maxPlayers, isStarted: false, direction: 1, deck: [], discardPile: [] };\r\n\r\n  rooms.set(roomId, room);\r\n\r\n  return c.json({ roomId, playerId, playerName: playerName.trim(), room });\r\n};\r\n\r\nexport const joinRoom = async (c: Context) => {\r\n  const roomId = c.req.param('roomId');\r\n  const { playerName } = await c.req.json();\r\n\r\n  if (!playerName || typeof playerName !== \"string\") {\r\n    return c.json({ error: \"Nom de joueur requis\" }, 400);\r\n  }\r\n\r\n  const room = rooms.get(roomId);\r\n  if (!room) {\r\n    return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n  }\r\n\r\n  const existingPlayer = room.players.find((p) => p.name === playerName.trim());\r\n  if (existingPlayer) {\r\n    existingPlayer.isConnected = true;\r\n    return c.json({ roomId, playerId: existingPlayer.id, playerName: playerName.trim(), room });\r\n  }\r\n\r\n  if (room.isStarted) {\r\n    return c.json({ error: \"La partie a d\u00E9j\u00E0 commenc\u00E9\" }, 400);\r\n  }\r\n  if (room.players.length >= room.maxPlayers) {\r\n    return c.json({ error: \"Salon complet\" }, 400);\r\n  }\r\n\r\n  const playerId = `player_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  const player: Player = { id: playerId, name: playerName.trim(), cards: [], isConnected: true };\r\n  room.players.push(player);\r\n\r\n  return c.json({ roomId, playerId, playerName: playerName.trim(), room });\r\n};\r\n\r\nexport const getRoom = (c: Context) => {\r\n  const roomId = c.req.param('roomId');\r\n  const room = rooms.get(roomId);\r\n\r\n  if (!room) {\r\n    return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n  }\r\n\r\n  return c.json(room);\r\n};\r\n\r\nexport const startGame = (c: Context) => {\r\n  const roomId = c.req.param('roomId');\r\n  const room = rooms.get(roomId);\r\n\r\n  if (!room) {\r\n    return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n  }\r\n  if (room.isStarted) {\r\n    return c.json({ error: \"La partie a d\u00E9j\u00E0 commenc\u00E9\" }, 400);\r\n  }\r\n  if (room.players.length < 2) {\r\n    return c.json({ error: \"Au moins 2 joueurs requis\" }, 400);\r\n  }\r\n\r\n  if (room.gameType === \"uno\") {\r\n    // Initialize UNO game\r\n    const deck = createDeck();\r\n\r\n    // Deal 7 cards to each player\r\n    room.players.forEach((player) => {\r\n      player.cards = [];\r\n      for (let i = 0; i < 7; i++) {\r\n        const card = deck.pop();\r\n        if (card) {\r\n          player.cards.push(card);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Find a starting card\r\n    let topCard: UnoCard | undefined;\r\n    for (let i = 0; i < deck.length; i++) {\r\n      if (deck[i].color !== \"wild\") {\r\n        topCard = deck.splice(i, 1)[0];\r\n        break;\r\n      }\r\n    }\r\n\r\n    room.deck = deck;\r\n    room.discardPile = topCard ? [topCard] : [];\r\n    room.topCard = topCard;\r\n    room.drawPenalty = 0;\r\n  } else if (room.gameType === \"skyjo\") {\r\n    // Initialize Skyjo game\r\n    const deck = createSkyjoDeck();\r\n\r\n    // Initialize players with Skyjo cards\r\n    room.players.forEach((player) => {\r\n      const skyjoPlayer = initializeSkyjoPlayer(player.id, player.name, deck);\r\n      player.cards = skyjoPlayer.cards;\r\n      player.score = 0;\r\n      player.totalScore = 0;\r\n      (player as any).cardsRevealed = 0; // Track how many initial cards have been revealed\r\n    });\r\n\r\n    room.deck = deck;\r\n    room.discardPile = [];\r\n    room.topCard = undefined;\r\n    room.drawPenalty = 0;\r\n    room.round = 1;\r\n    (room as any).isInitialization = true; // Start in initialization phase\r\n\r\n    // Start the discard pile with one card from deck\r\n    if (deck.length > 0) {\r\n      const firstCard = deck.pop()!;\r\n      room.discardPile = [firstCard];\r\n    }\r\n  }\r\n\r\n  room.currentPlayer = room.players[0].id;\r\n  room.isStarted = true;\r\n  \r\n  rooms.set(roomId, room);\r\n  return c.json(room);\r\n};\r\n\r\nexport const playCard = async (c: Context) => {\r\n  const roomId = c.req.param('roomId');\r\n  const { playerId, cardId, wildColor } = await c.req.json();\r\n\r\n  const room = rooms.get(roomId);\r\n  if (!room) return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n  if (!room.isStarted) return c.json({ error: \"La partie n'a pas commenc\u00E9\" }, 400);\r\n  if (room.currentPlayer !== playerId) return c.json({ error: \"Ce n'est pas votre tour\" }, 400);\r\n\r\n  const player = room.players.find((p) => p.id === playerId);\r\n  if (!player) return c.json({ error: \"Joueur non trouv\u00E9\" }, 404);\r\n\r\n  const cardIndex = player.cards.findIndex((c: any) => c.id === cardId);\r\n  if (cardIndex === -1) return c.json({ error: \"Carte non trouv\u00E9e\" }, 400);\r\n\r\n  const card = player.cards[cardIndex] as UnoCard;\r\n\r\n  if ((card.type === \"wild\" || card.type === \"wild_draw4\") && !wildColor) {\r\n    return c.json({ error: \"Vous devez choisir une couleur pour cette carte\" }, 400);\r\n  }\r\n  if (wildColor && ![\"red\", \"blue\", \"green\", \"yellow\"].includes(wildColor)) {\r\n    return c.json({ error: \"Couleur invalide\" }, 400);\r\n  }\r\n\r\n  if (room.drawPenalty && room.drawPenalty > 0) {\r\n    if (room.topCard?.type === \"draw2\") {\r\n      if (card.type !== \"draw2\" && card.type !== \"wild_draw4\") {\r\n        return c.json({ error: \"Vous devez jouer une carte +2 ou +4 pour contrer un +2\" }, 400);\r\n      }\r\n    } else if (room.topCard?.type === \"wild_draw4\") {\r\n      if (card.type !== \"wild_draw4\") {\r\n        return c.json({ error: \"Vous devez jouer une carte +4 pour contrer un +4\" }, 400);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove card from player's hand\r\n  player.cards.splice(cardIndex, 1);\r\n\r\n  // Add card to discard pile\r\n  room.discardPile.push(card);\r\n  room.topCard = card;\r\n\r\n  // Handle special cards\r\n  let skipNextPlayer = false;\r\n  let reverseDirection = false;\r\n\r\n  if (card.type === \"skip\") {\r\n    skipNextPlayer = true;\r\n    room.drawPenalty = 0; // Clear penalty\r\n  } else if (card.type === \"reverse\") {\r\n    reverseDirection = true;\r\n    room.drawPenalty = 0; // Clear penalty\r\n  } else if (card.type === \"draw2\") {\r\n    // Add to existing penalty or start new one\r\n    room.drawPenalty = (room.drawPenalty || 0) + 2;\r\n  } else if (card.type === \"wild_draw4\") {\r\n    // Add to existing penalty or start new one\r\n    room.drawPenalty = (room.drawPenalty || 0) + 4;\r\n    room.wildColor = wildColor as any; // Set the chosen color\r\n  } else if (card.type === \"wild\") {\r\n    room.drawPenalty = 0; // Clear penalty\r\n    room.wildColor = wildColor as any; // Set the chosen color\r\n  } else {\r\n    // Regular card played, clear any existing penalty and wild color\r\n    room.drawPenalty = 0;\r\n    room.wildColor = undefined;\r\n  }\r\n\r\n  // Reverse direction if needed\r\n  if (reverseDirection) {\r\n    room.direction = room.direction === 1 ? -1 : 1;\r\n  }\r\n\r\n  // Move to next player\r\n  const currentPlayerIndex = room.players.findIndex((p) => p.id === playerId);\r\n  let nextPlayerIndex;\r\n\r\n  if (room.direction === 1) {\r\n    nextPlayerIndex = (currentPlayerIndex + 1) % room.players.length;\r\n  } else {\r\n    nextPlayerIndex =\r\n      currentPlayerIndex === 0\r\n        ? room.players.length - 1\r\n        : currentPlayerIndex - 1;\r\n  }\r\n\r\n  // Skip next player if needed\r\n  if (skipNextPlayer) {\r\n    if (room.direction === 1) {\r\n      nextPlayerIndex = (nextPlayerIndex + 1) % room.players.length;\r\n    } else {\r\n      nextPlayerIndex =\r\n        nextPlayerIndex === 0 ? room.players.length - 1 : nextPlayerIndex - 1;\r\n    }\r\n  }\r\n\r\n  room.currentPlayer = room.players[nextPlayerIndex].id;\r\n\r\n  // Check for winner\r\n  if (player.cards.length === 0) {\r\n    room.winner = playerId;\r\n    room.isFinished = true;\r\n    room.currentPlayer = undefined; // No more turns\r\n  }\r\n\r\n  // Reset UNO status only if player no longer has exactly 1 card after playing\r\n  if (player.cards.length !== 1 && room.unoCalledBy === playerId) {\r\n    room.unoCalledBy = undefined;\r\n    room.unoChallengeTime = undefined;\r\n  }\r\n\r\n  rooms.set(roomId, room);\r\n  return c.json(room);\r\n};\r\n\r\nexport const drawCard = async (c: Context) => {\r\n  const roomId = c.req.param('roomId');\r\n  const { playerId } = await c.req.json();\r\n\r\n  const room = rooms.get(roomId);\r\n  if (!room) return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n  if (!room.isStarted) return c.json({ error: \"La partie n'a pas commenc\u00E9\" }, 400);\r\n  if (room.currentPlayer !== playerId) return c.json({ error: \"Ce n'est pas votre tour\" }, 400);\r\n\r\n  const player = room.players.find((p) => p.id === playerId);\r\n  if (!player) {\r\n    return c.json({ error: \"Joueur non trouv\u00E9\" },404);\r\n  }\r\n\r\n  if (room.deck.length === 0) {\r\n    return c.json({ error: \"Plus de cartes \u00E0 piocher\" },400);\r\n  }\r\n\r\n  // Check if there's a draw penalty to apply\r\n  if (room.drawPenalty && room.drawPenalty > 0) {\r\n    // Player must draw the penalty cards\r\n    for (let i = 0; i < room.drawPenalty; i++) {\r\n      const drawnCard = room.deck.pop();\r\n      if (drawnCard) {\r\n        player.cards.push(drawnCard);\r\n      }\r\n    }\r\n    room.drawPenalty = 0; // Clear penalty after drawing\r\n  } else {\r\n    // Normal draw - just one card\r\n    const drawnCard = room.deck.pop();\r\n    if (drawnCard) {\r\n      player.cards.push(drawnCard);\r\n    }\r\n  }\r\n\r\n  // Reset UNO status if player no longer has exactly 1 card after drawing\r\n  if (player.cards.length !== 1 && room.unoCalledBy === playerId) {\r\n    room.unoCalledBy = undefined;\r\n    room.unoChallengeTime = undefined;\r\n  }\r\n\r\n  // Move to next player after drawing\r\n  const currentPlayerIndex = room.players.findIndex((p) => p.id === playerId);\r\n  let nextPlayerIndex;\r\n\r\n  if (room.direction === 1) {\r\n    nextPlayerIndex = (currentPlayerIndex + 1) % room.players.length;\r\n  } else {\r\n    nextPlayerIndex =\r\n      currentPlayerIndex === 0\r\n        ? room.players.length - 1\r\n        : currentPlayerIndex - 1;\r\n  }\r\n\r\n  room.currentPlayer = room.players[nextPlayerIndex].id;\r\n\r\n  rooms.set(roomId, room);\r\n  return c.json(room);\r\n};\r\n\r\nexport const callUno = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { playerId } = await c.req.json();\r\n\r\n    const room = rooms.get(roomId);\r\n    if (!room) return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n    \r\n    const player = room.players.find((p) => p.id === playerId);\r\n    if (!player) return c.json({ error: \"Joueur non trouv\u00E9\" }, 404);\r\n\r\n    if (player.cards.length !== 1) {\r\n        return c.json({ error: \"Vous devez avoir exactement 1 carte pour appeler UNO\" }, 400);\r\n    }\r\n    \r\n    room.unoCalledBy = playerId;\r\n    room.unoChallengeTime = Date.now() + 10000;\r\n    \r\n    rooms.set(roomId, room);\r\n    return c.json({ success: true, message: `${player.name} a appel\u00E9 UNO!`, room });\r\n};\r\n\r\nexport const challengeUno = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { challengerId, challengedPlayerId } = await c.req.json();\r\n\r\n    const room = rooms.get(roomId);\r\n    if (!room) return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n    \r\n    // ... Logique interne de challengeUno identique ...\r\nconst challenger = room.players.find((p) => p.id === challengerId);\r\n  const challenged = room.players.find((p) => p.id === challengedPlayerId);\r\n\r\n  if (!challenger || !challenged) {\r\n    return c.json({ error: \"Joueur non trouv\u00E9\" },404);\r\n  }\r\n\r\n  // Challenge is valid if player has exactly 1 card and hasn't called UNO\r\n  if (\r\n    challenged.cards.length === 1 &&\r\n    room.unoCalledBy !== challengedPlayerId\r\n  ) {\r\n    // Challenge successful - challenged player draws 2 cards automatically\r\n    for (let i = 0; i < 2; i++) {\r\n      const card = room.deck.pop();\r\n      if (card) {\r\n        challenged.cards.push(card);\r\n      }\r\n    }\r\n\r\n    // Clear UNO challenge state\r\n    room.unoCalledBy = undefined;\r\n    room.unoChallengeTime = undefined;\r\n\r\n    rooms.set(roomId, room);\r\n    c.json({\r\n      success: true,\r\n      message: `${challenger.name} a d\u00E9fi\u00E9 ${challenged.name} avec succ\u00E8s! ${challenged.name} pioche 2 cartes automatiquement.`,\r\n      room,\r\n    });\r\n  } else {\r\n    return c.json({ error: \"D\u00E9fi invalide - le joueur a d\u00E9j\u00E0 appel\u00E9 UNO ou n'a pas 1 carte\" }, 400);\r\n}};\r\n\r\nexport const changeGame = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { gameType } = await c.req.json();\r\n\r\n    const room = rooms.get(roomId);\r\n    if (!room) return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n\r\n    if (room.isStarted) {\r\n        return c.json({ error: \"Impossible de changer de jeu pendant une partie\" }, 400);\r\n    }\r\n    if (![\"uno\", \"skyjo\"].includes(gameType)) {\r\n        return c.json({ error: \"Type de jeu invalide\" }, 400);\r\n    }\r\n\r\n    room.gameType = gameType;\r\n    if (gameType === \"skyjo\") room.maxPlayers = Math.min(room.maxPlayers, 8);\r\n    else room.maxPlayers = Math.min(room.maxPlayers, 4);\r\n    \r\n    rooms.set(roomId, room);\r\n    return c.json(room);\r\n};\r\n\r\nexport const leaveGame = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { playerId } = await c.req.json();\r\n\r\n    const room = rooms.get(roomId);\r\n    if (!room) return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n\r\n    const playerIndex = room.players.findIndex((p) => p.id === playerId);\r\n  if (playerIndex === -1) {\r\n    return c.json({ error: \"Joueur non trouv\uFFFD\uFFFD\" },404);\r\n  }\r\n\r\n  // Remove player from room\r\n  room.players.splice(playerIndex, 1);\r\n\r\n  // If no players left, delete the room\r\n  if (room.players.length === 0) {\r\n    rooms.delete(roomId);\r\n    \r\n    return c.json({ message: \"Salon ferm\u00E9 - aucun joueur restant\" });\r\n  }\r\n};\r\nexport const restartGame = (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const room = rooms.get(roomId);\r\n    if (!room) return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n\r\n     // Reset room to lobby state\r\n  room.isStarted = false;\r\n  room.isFinished = false;\r\n  room.winner = undefined;\r\n  room.currentPlayer = undefined;\r\n  room.topCard = undefined;\r\n  room.deck = [];\r\n  room.discardPile = [];\r\n  room.drawPenalty = 0;\r\n  room.wildColor = undefined;\r\n  room.unoCalledBy = undefined;\r\n  room.unoChallengeTime = undefined;\r\n\r\n  // Clear all player cards\r\n  room.players.forEach((player) => {\r\n    player.cards = [];\r\n  });\r\n\r\n\r\n    rooms.set(roomId, room);\r\n    return c.json(room);\r\n};\r\n\r\n// Skyjo-specific endpoints\r\nexport const skyjoRevealCard = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { playerId, row, col } = await c.req.json();\r\n    const room = rooms.get(roomId);\r\n    if (!room || room.gameType !== \"skyjo\") return c.json({ error: \"Salon Skyjo non trouv\u00E9\" }, 404);\r\n    \r\n    if (!room.isStarted) {\r\n    return c.json({ error: \"La partie n'a pas commenc\u00E9\" },400);\r\n  }\r\n\r\n  if (room.currentPlayer !== playerId) {\r\n    return c.json({ error: \"Ce n'est pas votre tour\" },400);\r\n  }\r\n\r\n  const player = room.players.find((p) => p.id === playerId);\r\n  if (!player) {\r\n    return c.json({ error: \"Joueur non trouv\u00E9\" },404);\r\n  }\r\n\r\n  // Reveal the card\r\n  if (\r\n    player.cards[row] &&\r\n    player.cards[row][col] &&\r\n    !player.cards[row][col].isRevealed\r\n  ) {\r\n    player.cards[row][col].isRevealed = true;\r\n\r\n    // Handle initialization phase (choosing initial 2 cards)\r\n    if ((room as any).isInitialization) {\r\n      (player as any).cardsRevealed = ((player as any).cardsRevealed || 0) + 1;\r\n\r\n      // If player has revealed 2 cards, move to next player\r\n      if ((player as any).cardsRevealed >= 2) {\r\n        const nextPlayerIndex =\r\n          (room.players.findIndex((p) => p.id === playerId) + 1) %\r\n          room.players.length;\r\n        room.currentPlayer = room.players[nextPlayerIndex].id;\r\n\r\n        // Check if all players have revealed their 2 initial cards\r\n        const allPlayersReady = room.players.every(\r\n          (p) => ((p as any).cardsRevealed || 0) >= 2,\r\n        );\r\n        if (allPlayersReady) {\r\n          (room as any).isInitialization = false;\r\n          room.currentPlayer = room.players[0].id; // Start with first player for main game\r\n        }\r\n      }\r\n    } else {\r\n      // Normal game play - check for column removal\r\n      checkAndRemoveColumn(player as any, col);\r\n\r\n      // Move to next player\r\n      const nextPlayerIndex =\r\n        (room.players.findIndex((p) => p.id === playerId) + 1) %\r\n        room.players.length;\r\n      room.currentPlayer = room.players[nextPlayerIndex].id;\r\n    }\r\n    \r\n    return c.json(room);\r\n}};\r\n\r\n// ---- CODE CORRECT ----\r\nexport const skyjoDrawCard = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { playerId } = await c.req.json();\r\n    const room = rooms.get(roomId);\r\n    if (!room || room.gameType !== \"skyjo\") return c.json({ error: \"Salon Skyjo non trouv\u00E9\" }, 404);\r\n    \r\n    if (!room.isStarted) {\r\n      return c.json({ error: \"La partie n'a pas commenc\u00E9\" },400);\r\n    }\r\n\r\n    if ((room as any).isInitialization) {\r\n      return c.json({ error: \"Vous devez d'abord r\u00E9v\u00E9ler vos 2 cartes initiales\" },400);\r\n    }\r\n\r\n    if (room.currentPlayer !== playerId) {\r\n      return c.json({ error: \"Ce n'est pas votre tour\" },400);\r\n    }\r\n\r\n    const deck = room.deck as number[];\r\n    if (deck.length === 0) {\r\n      return c.json({ error: \"Plus de cartes dans la pioche\" },400);\r\n    }\r\n\r\n    // On d\u00E9clare la carte pioch\u00E9e une seule fois\r\n    const drawnCard = deck.pop()!;\r\n\r\n    // On assigne la carte pioch\u00E9e \u00E0 des propri\u00E9t\u00E9s temporaires de la room\r\n    (room as any).tempDrawnCard = drawnCard;\r\n    (room as any).tempDrawnBy = playerId;\r\n\r\n    rooms.set(roomId, room);\r\n    return c.json({ room, drawnCard });\r\n};\r\n\r\nexport const skyjoExchangeCard = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { playerId, row, col } = await c.req.json();\r\n    const room = rooms.get(roomId);\r\n    if (!room || room.gameType !== \"skyjo\") return c.json({ error: \"Salon Skyjo non trouv\u00E9\" }, 404);\r\n\r\n    const tempDrawnCard = (room as any).tempDrawnCard;\r\n  const tempDrawnBy = (room as any).tempDrawnBy;\r\n\r\n  if (!tempDrawnCard || tempDrawnBy !== playerId) {\r\n    return c.json({ error: \"Aucune carte pioch\u00E9e ou joueur incorrect\" },400);\r\n  }\r\n\r\n  const player = room.players.find((p) => p.id === playerId);\r\n  if (!player) {\r\n    return c.json({ error: \"Joueur non trouv\u00E9\" },404);\r\n  }\r\n\r\n  // Exchange the card\r\n  const oldCard = player.cards[row][col];\r\n  player.cards[row][col] = {\r\n    id: `${playerId}-${row}-${col}`,\r\n    value: tempDrawnCard,\r\n    isRevealed: true,\r\n  };\r\n\r\n  // Add the old card to discard pile if it was revealed\r\n  const discardPile = room.discardPile as number[];\r\n  if (oldCard.isRevealed) {\r\n    discardPile.push(oldCard.value);\r\n  }\r\n\r\n  // Check for column removal\r\n  checkAndRemoveColumn(player as any, col);\r\n\r\n  // Clear temp card\r\n  delete (room as any).tempDrawnCard;\r\n  delete (room as any).tempDrawnBy;\r\n\r\n  // Check if player has all cards revealed (round end condition)\r\n  if (allCardsRevealed(player as any)) {\r\n    finalizeRoundScoring(room as any, playerId);\r\n\r\n    // Check if game should end\r\n    const maxScore = Math.max(...room.players.map((p) => p.totalScore || 0));\r\n    if (maxScore >= 100) {\r\n      room.isFinished = true;\r\n      const winnerScore = Math.min(\r\n        ...room.players.map((p) => p.totalScore || 0),\r\n      );\r\n      room.winner = room.players.find((p) => p.totalScore === winnerScore)?.id;\r\n    } else {\r\n      // Start new round\r\n      room.round = (room.round || 1) + 1;\r\n      // Reset for new round (reinitialize cards)\r\n      const newDeck = createSkyjoDeck();\r\n      room.players.forEach((player) => {\r\n        const skyjoPlayer = initializeSkyjoPlayer(\r\n          player.id,\r\n          player.name,\r\n          newDeck,\r\n        );\r\n        player.cards = skyjoPlayer.cards;\r\n        player.score = 0;\r\n      });\r\n      room.deck = newDeck;\r\n      room.discardPile = [];\r\n      if (newDeck.length > 0) {\r\n        const firstCard = newDeck.pop()!;\r\n        room.discardPile = [firstCard];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Move to next player\r\n  const nextPlayerIndex =\r\n    (room.players.findIndex((p) => p.id === playerId) + 1) %\r\n    room.players.length;\r\n  room.currentPlayer = room.players[nextPlayerIndex].id;\r\n    \r\n    rooms.set(roomId, room);\r\n    return c.json(room);\r\n};\r\n\r\nexport const skyjoDiscardDrawn = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { playerId, row, col } = await c.req.json();\r\n    const room = rooms.get(roomId);\r\n    if (!room || room.gameType !== \"skyjo\") return c.json({ error: \"Salon Skyjo non trouv\u00E9\" }, 404);\r\n\r\n    const tempDrawnCard = (room as any).tempDrawnCard;\r\n  const tempDrawnBy = (room as any).tempDrawnBy;\r\n\r\n  if (!tempDrawnCard || tempDrawnBy !== playerId) {\r\n    return c.json({ error: \"Aucune carte pioch\u00E9e ou joueur incorrect\" },400);\r\n  }\r\n\r\n  const player = room.players.find((p) => p.id === playerId);\r\n  if (!player) {\r\n    return c.json({ error: \"Joueur non trouv\u00E9\" },404);\r\n  }\r\n\r\n  // Discard the drawn card\r\n  const discardPile = room.discardPile as number[];\r\n  discardPile.push(tempDrawnCard);\r\n\r\n  // Reveal one of player's cards\r\n  if (\r\n    player.cards[row] &&\r\n    player.cards[row][col] &&\r\n    !player.cards[row][col].isRevealed\r\n  ) {\r\n    player.cards[row][col].isRevealed = true;\r\n\r\n    // Check for column removal\r\n    checkAndRemoveColumn(player as any, col);\r\n  }\r\n\r\n  // Clear temp card\r\n  delete (room as any).tempDrawnCard;\r\n  delete (room as any).tempDrawnBy;\r\n\r\n  // Move to next player\r\n  const nextPlayerIndex =\r\n    (room.players.findIndex((p) => p.id === playerId) + 1) %\r\n    room.players.length;\r\n  room.currentPlayer = room.players[nextPlayerIndex].id;\r\n\r\n    \r\n    rooms.set(roomId, room);\r\n    return c.json(room);\r\n};\r\n\r\nexport const skyjoTakeFromDiscard = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { playerId, row, col } = await c.req.json();\r\n    const room = rooms.get(roomId);\r\n    if (!room || room.gameType !== \"skyjo\") return c.json({ error: \"Salon Skyjo non trouv\u00E9\" }, 404);\r\n\r\n     if (!room.isStarted) {\r\n    return c.json({ error: \"La partie n'a pas commenc\u00E9\" },400);\r\n  }\r\n\r\n  if ((room as any).isInitialization) {\r\n    return c.json({ error: \"Vous devez d'abord r\u00E9v\u00E9ler vos 2 cartes initiales\" },400);\r\n  }\r\n\r\n  if (room.currentPlayer !== playerId) {\r\n    return c.json({ error: \"Ce n'est pas votre tour\" },400);\r\n  }\r\n\r\n  const discardPile = room.discardPile as number[];\r\n  if (discardPile.length === 0) {\r\n    return c.json({ error: \"Pile de d\u00E9fausse vide\" },400);\r\n  }\r\n\r\n  const player = room.players.find((p) => p.id === playerId);\r\n  if (!player) {\r\n    return c.json({ error: \"Joueur non trouv\u00E9\" },404);\r\n  }\r\n\r\n  // Take the top card from discard pile\r\n  const takenCard = discardPile.pop()!;\r\n\r\n  // Exchange with player's card\r\n  const oldCard = player.cards[row][col];\r\n  player.cards[row][col] = {\r\n    id: `${playerId}-${row}-${col}`,\r\n    value: takenCard,\r\n    isRevealed: true,\r\n  };\r\n\r\n  // Add the old card to discard pile (revealed or not, it becomes visible when discarded)\r\n  discardPile.push(oldCard.value);\r\n\r\n  // Check for column removal\r\n  checkAndRemoveColumn(player as any, col);\r\n\r\n  // Move to next player\r\n  const nextPlayerIndex =\r\n    (room.players.findIndex((p) => p.id === playerId) + 1) %\r\n    room.players.length;\r\n  room.currentPlayer = room.players[nextPlayerIndex].id;\r\n\r\n    \r\n    rooms.set(roomId, room);\r\n    return c.json(room);\r\n};\r\n\r\n// Heartbeat & Backup/Restore\r\nexport const heartbeat = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { playerId } = await c.req.json();\r\n    const room = rooms.get(roomId);\r\n    if (!room) return c.json({ error: \"Salon non trouv\u00E9\" }, 404);\r\n\r\n    const player = room.players.find((p) => p.id === playerId);\r\n    if (!player) return c.json({ error: \"Joueur non trouv\u00E9\" }, 404);\r\n    \r\n    player.isConnected = true;\r\n    (player as any).lastSeen = Date.now();\r\n    \r\n    rooms.set(roomId, room);\r\n    return c.json({ status: \"ok\" });\r\n};\r\n\r\nconst backups = new Map<string, any>();\r\n\r\nexport const backupRoom = async (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const { gameData, timestamp } = await c.req.json();\r\n    if (!gameData) return c.json({ error: \"Donn\u00E9es de jeu requises\" }, 400);\r\n\r\n    backups.set(roomId, { gameData, timestamp, backupTime: Date.now() });\r\n    return c.json({ status: \"backed up\" });\r\n};\r\n\r\nexport const restoreRoom = (c: Context) => {\r\n    const roomId = c.req.param('roomId');\r\n    const backup = backups.get(roomId);\r\n    if (!backup) return c.json({ error: \"Aucune sauvegarde trouv\u00E9e\" }, 404);\r\n    if (Date.now() - backup.backupTime > 3600000) {\r\n        backups.delete(roomId);\r\n        return c.json({ error: \"Sauvegarde expir\u00E9e\" }, 404);\r\n    }\r\n    return c.json({ gameData: backup.gameData, timestamp: backup.timestamp });\r\n};\r\n\r\nexport const createRoomWithRestore = async (c: Context) => {\r\n    const { playerName, maxPlayers = 4, gameType = \"uno\", roomId } = await c.req.json();\r\n\r\n    if (!playerName || typeof playerName !== \"string\") {\r\n        return c.json({ error: \"Nom de joueur requis\" }, 400);\r\n    }\r\n\r\n    if (roomId) {\r\n        const backup = backups.get(roomId);\r\n        if (backup && Date.now() - backup.backupTime < 3600000) {\r\n            rooms.set(roomId, backup.gameData);\r\n\r\n      // Find or add player\r\n      const room = backup.gameData;\r\n      let player = room.players.find((p: any) => p.name === playerName);\r\n      if (!player) {\r\n        const playerId = `player_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n        player = {\r\n          id: playerId,\r\n          name: playerName.trim(),\r\n          cards: [],\r\n          isConnected: true,\r\n        };\r\n        room.players.push(player);\r\n      } else {\r\n        player.isConnected = true;\r\n      }\r\n\r\n      rooms.set(roomId, room);\r\n      return c.json({\r\n        roomId,\r\n        playerId: player.id,\r\n        playerName: player.name,\r\n        room,\r\n        restored: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  const newRoomId = roomId || generateRoomCode();\r\n  const playerId = `player_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n  const player: Player = {\r\n    id: playerId,\r\n    name: playerName.trim(),\r\n    cards: [],\r\n    isConnected: true,\r\n  };\r\n\r\n  const room: GameRoom = {\r\n    id: newRoomId,\r\n    name: `Salon ${newRoomId}`,\r\n    gameType: gameType as any,\r\n    players: [player],\r\n    maxPlayers,\r\n    isStarted: false,\r\n    direction: 1,\r\n    deck: [],\r\n    discardPile: [],\r\n  };\r\n\r\n  rooms.set(newRoomId, room);\r\n    return c.json({ \r\n      roomId: newRoomId,\r\n    playerId,\r\n    playerName: playerName.trim(),\r\n    room,\r\n    restored: false, });\r\n};", "// server/index.ts\r\nimport \"dotenv/config\";\r\nimport { Hono } from \"hono\";\r\nimport { cors } from \"hono/cors\";\r\n\r\nimport { handleDemo } from \"./routes/demo\";\r\nimport {\r\n  createRoom,\r\n  joinRoom,\r\n  getRoom,\r\n  startGame,\r\n  playCard,\r\n  drawCard,\r\n  callUno,\r\n  challengeUno,\r\n  changeGame,\r\n  restartGame,\r\n  leaveGame,\r\n  heartbeat,\r\n  backupRoom,\r\n  restoreRoom,\r\n  createRoomWithRestore,\r\n  skyjoRevealCard,\r\n  skyjoDrawCard,\r\n  skyjoExchangeCard,\r\n  skyjoDiscardDrawn,\r\n  skyjoTakeFromDiscard,\r\n} from \"./routes/rooms\";\r\n\r\n// IMPORTANT : Vos fonctions de route (ex: createRoom) doivent \u00EAtre adapt\u00E9es.\r\n// Le format (req, res) d'Express devient (c) de Hono.\r\n// Exemple d'adaptation :\r\n// Express: function createRoom(req, res) { const body = req.body; res.json({...}); }\r\n// Hono:    async function createRoom(c) { const body = await c.req.json(); return c.json({...}); }\r\n\r\nconst app = new Hono().basePath('/api');\r\n\r\n// Middleware\r\napp.use('*', cors()); // Middleware CORS int\u00E9gr\u00E9 \u00E0 Hono\r\n\r\n// Routes\r\napp.get(\"/ping\", (c) => {\r\n  const ping = process.env.PING_MESSAGE ?? \"ping\";\r\n  return c.json({ message: ping });\r\n});\r\n\r\napp.get(\"/demo\", handleDemo);\r\napp.post(\"/rooms\", createRoom);\r\napp.post(\"/rooms/restore\", createRoomWithRestore);\r\napp.post(\"/rooms/:roomId/join\", joinRoom);\r\napp.get(\"/rooms/:roomId\", getRoom);\r\napp.post(\"/rooms/:roomId/start\", startGame);\r\napp.post(\"/rooms/:roomId/play\", playCard);\r\napp.post(\"/rooms/:roomId/draw\", drawCard);\r\napp.post(\"/rooms/:roomId/uno\", callUno);\r\napp.post(\"/rooms/:roomId/challenge\", challengeUno);\r\napp.post(\"/rooms/:roomId/change-game\", changeGame);\r\napp.post(\"/rooms/:roomId/restart\", restartGame);\r\napp.post(\"/rooms/:roomId/leave\", leaveGame);\r\napp.post(\"/rooms/:roomId/heartbeat\", heartbeat);\r\napp.post(\"/rooms/:roomId/backup\", backupRoom);\r\napp.get(\"/rooms/:roomId/restore\", restoreRoom);\r\napp.post(\"/api/rooms/:roomId/skyjo/reveal\", skyjoRevealCard);\r\napp.post(\"/api/rooms/:roomId/skyjo/draw\", skyjoDrawCard);\r\napp.post(\"/api/rooms/:roomId/skyjo/exchange\", skyjoExchangeCard);\r\napp.post(\"/api/rooms/:roomId/skyjo/discard\", skyjoDiscardDrawn);\r\napp.post(\"/api/rooms/:roomId/skyjo/take-discard\", skyjoTakeFromDiscard);\r\n\r\n// L'export par d\u00E9faut est l'instance Hono\r\nexport default app;", "// api.ts (ou functions/api.ts selon votre structure)\r\nimport app from \"../../server/index.ts\";\r\n\r\nexport const onRequest: PagesFunction = (context) => {\r\n  // On appelle app.fetch en lui passant les bons morceaux du contexte de Cloudflare\r\n  return app.fetch(\r\n    context.request, // L'objet Request\r\n    context.env,     // Les variables d'environnement\r\n    context          // Le contexte d'ex\u00E9cution\r\n  );\r\n};\r\n", "import { onRequest as __api___path___ts_onRequest } from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\functions\\\\api\\\\[[path]].ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/:path*\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api___path___ts_onRequest],\n    },\n  ]", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\.wrangler\\\\tmp\\\\bundle-tgqQWs\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\.wrangler\\\\tmp\\\\bundle-tgqQWs\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\.wrangler\\\\tmp\\\\bundle-tgqQWs\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\.wrangler\\\\tmp\\\\pages-HXhiih\\\\functionsWorker-0.19196264265403884.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\.wrangler\\\\tmp\\\\pages-HXhiih\\\\functionsWorker-0.19196264265403884.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\.wrangler\\\\tmp\\\\bundle-P8oKpq\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\.wrangler\\\\tmp\\\\bundle-P8oKpq\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\yoshiki.magnolon\\\\Documents\\\\Travail BTS\\\\Informatique\\\\JS\\\\Ichi\\\\.wrangler\\\\tmp\\\\bundle-P8oKpq\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI;AACJ,IAAM,WAAW;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAC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EE;AA5EF,IA6EE;AA7EF,IA+EaC;AA/Eb,IAsFO;AAtFP,IAAAC,eAAA,MAAA;EAAA,0EAAA;AAAA,4CAAA;AAAA,4EAAA;AAAA,4EAAA;AAAA5M,sBAAAA;AAAA,gBAAA;AASM,oBAAgB,QAAQ,iBAAiB,aAAa;AACrD,KAAM;MACX;MACA;MACA;MACA,WAAAyM;MAEA;;QAAA;;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;;QAAA;;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,QAAAC;MACA;MACA;MACA;MACA;IAAA,IACE;AACSC,iBAAY;;MAEvB,WAAW,UAAqB;MAChC;MACA;MACA,QAAAD;IACF;AACO,qBAAQ;;;;MAIb;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,WAAAD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;;MAGA;;MAEA;;MAEA;;;;MAIA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,QAAAC;MACA;;MAEA;;MAEA,WAAAC;IACF;EAAA;AAAA,CAAA;AC1KA,IAAA,iBAAA,WAAA;EAAA,+BAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,4EAAA;AAAA,4EAAA;AAAA3M,sBAAAA;AAAA4M,iBAAAA;AACA,WAAO,UAAU;EAAA;AAAA,CAAA;ACDjB,IAAA,kBAAA,WAAA;EAAA,sCAAA,SAAA,QAAA;AAAA,WAAA,UAAA;MA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",
  "names": ["PerformanceMark", "type", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "hrtime", "dir", "env", "count", "type", "cwd", "hrtime", "assert", "Writable", "EventEmitter", "createNotImplementedError", "notImplemented", "__name", "notImplementedClass", "init_performance", "_timeOrigin", "_performanceNow", "nodeTiming", "PerformanceEntry", "PerformanceMark", "PerformanceMeasure", "PerformanceResourceTiming", "PerformanceObserverEntryList", "Performance", "PerformanceObserver", "performance", "type", "noop_default", "_console", "_ignoreErrors", "_stderr", "_stdout", "log", "info", "trace", "debug", "table", "error", "warn", "createTask", "clear", "count", "countReset", "dir", "dirxml", "group", "groupEnd", "groupCollapsed", "profile", "profileEnd", "time", "timeEnd", "timeLog", "timeStamp", "Console", "_times", "_stdoutErrorHandler", "_stderrErrorHandler", "Writable", "workerdConsole", "assert", "context", "console_default", "init_console", "hrtime", "bigint", "WriteStream", "env", "ReadStream", "NODE_VERSION", "Process", "EventEmitter", "cwd", "globalProcess", "getBuiltinModule", "exit", "platform", "nextTick", "unenvProcess", "abort", "addListener", "allowedNodeEnvironmentFlags", "hasUncaughtExceptionCaptureCallback", "setUncaughtExceptionCaptureCallback", "loadEnvFile", "sourceMapsEnabled", "arch", "argv", "argv0", "chdir", "config", "connected", "constrainedMemory", "availableMemory", "cpuUsage", "debugPort", "dlopen", "disconnect", "emit", "emitWarning", "eventNames", "execArgv", "execPath", "finalization", "features", "getActiveResourcesInfo", "getMaxListeners", "kill", "listeners", "listenerCount", "memoryUsage", "on", "off", "once", "pid", "ppid", "prependListener", "prependOnceListener", "rawListeners", "release", "removeAllListeners", "removeListener", "report", "resourceUsage", "setMaxListeners", "setSourceMapsEnabled", "stderr", "stdin", "stdout", "title", "throwDeprecation", "traceDeprecation", "umask", "uptime", "version", "versions", "domain", "initgroups", "moduleLoadList", "reallyExit", "openStdin", "binding", "send", "exitCode", "channel", "getegid", "geteuid", "getgid", "getgroups", "getuid", "setegid", "seteuid", "setgid", "setgroups", "setuid", "permission", "mainModule", "_events", "_eventsCount", "_exiting", "_maxListeners", "_debugEnd", "_debugProcess", "_fatalException", "_getActiveHandles", "_getActiveRequests", "_kill", "_preload_modules", "_rawDebug", "_startProfilerIdleNotifier", "_stopProfilerIdleNotifier", "_tickCallback", "_disconnect", "_handleQueue", "_pendingMessage", "_channel", "_send", "_linkedBinding", "_process", "process_default", "init_process", "init_promises", "access", "appendFile", "chown", "chmod", "copyFile", "cp", "lchown", "lchmod", "link", "lstat", "lutimes", "mkdir", "mkdtemp", "realpath", "open", "opendir", "readdir", "readFile", "readlink", "rename", "rm", "rmdir", "stat", "symlink", "truncate", "unlink", "utimes", "writeFile", "statfs", "watch", "glob", "init_fs", "init_constants", "constants", "subtle", "webcrypto", "init_crypto", "parse", "match", "path", "raw", "app", "init_node", "routes", "init_router", "Node", "Hono", "c", "player", "room", "playerId", "value", "_a", "result", "char", "prefix", "i", "drainBody", "env", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "env", "error", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "env", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "___Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "env", "type", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
